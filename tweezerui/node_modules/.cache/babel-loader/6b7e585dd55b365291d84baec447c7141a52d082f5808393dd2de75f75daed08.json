{"ast":null,"code":"var _jsxFileName = \"F:\\\\tweezerui\\\\src\\\\CanvasContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useRef, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CanvasContext = /*#__PURE__*/createContext({\n  canvas1: null,\n  canvas2: null\n});\nexport const useCanvases = () => {\n  _s();\n  return useContext(CanvasContext);\n};\n_s(useCanvases, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CanvasProvider = ({\n  children\n}) => {\n  _s2();\n  const canvasRefs = {\n    1: useRef(null),\n    2: useRef(null)\n  };\n  const [imageProps, setImageProps] = useState({\n    \"width\": -1,\n    \"height\": -1\n  });\n  const [drawProps, setDrawProps] = useState({\n    \"scale\": 1,\n    \"startX\": 1,\n    \"startY\": 1,\n    \"endX\": 1,\n    \"endY\": 1,\n    \"centerX\": 1,\n    \"centerY\": 1\n  });\n  const localStorageIDs = {\n    \"cameras\": \"cameras\",\n    \"cameraserver\": \"cameraserver\"\n  };\n  const [serverInfo, setServerInfo] = useState({\n    \"camserver\": {\n      1: {\n        \"ip\": \"10.0.63.153\",\n        \"port\": \"4001\",\n        \"username\": \"\",\n        \"password\": \"\"\n      },\n      2: {\n        \"ip\": \"10.0.63.153\",\n        \"port\": \"4002\",\n        \"username\": \"\",\n        \"password\": \"\"\n      }\n    },\n    \"trackserver\": {\n      1: {\n        \"ip\": \"10.0.63.153\",\n        \"port\": \"4003\",\n        \"username\": \"\",\n        \"password\": \"\"\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(CanvasContext.Provider, {\n    value: {\n      canvasRefs,\n      imageProps,\n      setImageProps,\n      drawProps,\n      setDrawProps,\n      localStorageIDs,\n      serverInfo,\n      setServerInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s2(CanvasProvider, \"+j64RO4FXccG1wU/M7LbXCZmfcg=\");\n_c = CanvasProvider;\nvar _c;\n$RefreshReg$(_c, \"CanvasProvider\");","map":{"version":3,"names":["React","createContext","useRef","useState","useContext","jsxDEV","_jsxDEV","CanvasContext","canvas1","canvas2","useCanvases","_s","CanvasProvider","children","_s2","canvasRefs","imageProps","setImageProps","drawProps","setDrawProps","localStorageIDs","serverInfo","setServerInfo","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/tweezerui/src/CanvasContext.js"],"sourcesContent":["import React, { createContext, useRef, useState, useContext } from 'react';\r\n\r\nconst CanvasContext = createContext({ canvas1: null, canvas2: null });\r\n\r\nexport const useCanvases = () => {\r\n  return useContext(CanvasContext);\r\n};\r\n\r\nexport const CanvasProvider = ({ children }) => {\r\n\r\n  const canvasRefs = {\r\n    1: useRef(null),\r\n    2: useRef(null),\r\n  };\r\n\r\n  const [imageProps, setImageProps] = useState({\r\n    \"width\": -1,\r\n    \"height\": -1,\r\n  });\r\n\r\n  const [drawProps, setDrawProps] = useState({\r\n    \"scale\": 1,\r\n    \"startX\": 1,\r\n    \"startY\": 1,\r\n    \"endX\": 1,\r\n    \"endY\": 1,\r\n    \"centerX\": 1,\r\n    \"centerY\": 1\r\n  });\r\n\r\n  const localStorageIDs = {\r\n    \"cameras\": \"cameras\",\r\n    \"cameraserver\": \"cameraserver\",\r\n  }\r\n\r\n  const [serverInfo, setServerInfo] = useState({\r\n    \"camserver\": {\r\n      1: { \"ip\": \"10.0.63.153\", \"port\": \"4001\", \"username\": \"\", \"password\": \"\" },\r\n      2: { \"ip\": \"10.0.63.153\", \"port\": \"4002\", \"username\": \"\", \"password\": \"\" }\r\n    },\r\n    \"trackserver\":{\r\n      1: { \"ip\": \"10.0.63.153\", \"port\": \"4003\", \"username\": \"\", \"password\": \"\" }\r\n    }\r\n    });\r\n\r\n\r\n\r\n  return (\r\n    <CanvasContext.Provider value={{ canvasRefs, imageProps, setImageProps, drawProps, setDrawProps, localStorageIDs, serverInfo, setServerInfo }}>\r\n      {children}\r\n    </CanvasContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3E,MAAMC,aAAa,gBAAGN,aAAa,CAAC;EAAEO,OAAO,EAAE,IAAI;EAAEC,OAAO,EAAE;AAAK,CAAC,CAAC;AAErE,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,OAAOP,UAAU,CAACG,aAAa,CAAC;AAClC,CAAC;AAACI,EAAA,CAFWD,WAAW;AAIxB,OAAO,MAAME,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAE9C,MAAMC,UAAU,GAAG;IACjB,CAAC,EAAEb,MAAM,CAAC,IAAI,CAAC;IACf,CAAC,EAAEA,MAAM,CAAC,IAAI;EAChB,CAAC;EAED,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC;IAC3C,OAAO,EAAE,CAAC,CAAC;IACX,QAAQ,EAAE,CAAC;EACb,CAAC,CAAC;EAEF,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC;IACzC,OAAO,EAAE,CAAC;IACV,QAAQ,EAAE,CAAC;IACX,QAAQ,EAAE,CAAC;IACX,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,CAAC;IACT,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMiB,eAAe,GAAG;IACtB,SAAS,EAAE,SAAS;IACpB,cAAc,EAAE;EAClB,CAAC;EAED,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC;IAC3C,WAAW,EAAE;MACX,CAAC,EAAE;QAAE,IAAI,EAAE,aAAa;QAAE,MAAM,EAAE,MAAM;QAAE,UAAU,EAAE,EAAE;QAAE,UAAU,EAAE;MAAG,CAAC;MAC1E,CAAC,EAAE;QAAE,IAAI,EAAE,aAAa;QAAE,MAAM,EAAE,MAAM;QAAE,UAAU,EAAE,EAAE;QAAE,UAAU,EAAE;MAAG;IAC3E,CAAC;IACD,aAAa,EAAC;MACZ,CAAC,EAAE;QAAE,IAAI,EAAE,aAAa;QAAE,MAAM,EAAE,MAAM;QAAE,UAAU,EAAE,EAAE;QAAE,UAAU,EAAE;MAAG;IAC3E;EACA,CAAC,CAAC;EAIJ,oBACEG,OAAA,CAACC,aAAa,CAACgB,QAAQ;IAACC,KAAK,EAAE;MAAET,UAAU;MAAEC,UAAU;MAAEC,aAAa;MAAEC,SAAS;MAAEC,YAAY;MAAEC,eAAe;MAAEC,UAAU;MAAEC;IAAc,CAAE;IAAAT,QAAA,EAC3IA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE7B,CAAC;AAACd,GAAA,CA5CWF,cAAc;AAAAiB,EAAA,GAAdjB,cAAc;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}