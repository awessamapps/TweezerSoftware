{"ast":null,"code":"var _jsxFileName = \"F:\\\\TweezerSoftware\\\\tweezerui\\\\src\\\\components\\\\CameraPreview\\\\CameraPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Slide } from 'react-toastify';\nimport axios from 'axios';\nimport { useGlobalContext } from '../../GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CameraPreview() {\n  _s();\n  const [allCameras, setAllCameras] = useState([]);\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\n\n  const {\n    canvasRefs,\n    imageProps,\n    setImageProps,\n    drawProps,\n    setDrawProps,\n    serverInfo,\n    cameras,\n    setCameras\n  } = useGlobalContext();\n  let drawing = false;\n  const [maxWidth, setMaxWidth] = useState(1000);\n  useEffect(() => {\n    // set timeout to send request to /heartbeat of both the servers and it controls the is_preview and is switch active\n    // if the server is not responding, is_preview is false, is_switch_active is true\n\n    const fetchHeartbeat = cameraId => {\n      const baseURL = \"http://\" + serverInfo.camserver[cameraId].ip + \":\" + serverInfo.camserver[cameraId].portHTTP;\n      const endpoint = '/heartbeat';\n      const api = baseURL + endpoint;\n      axios.get(api).then(response => {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            isPreviewActive: true\n          }\n        }));\n      }).catch(error => {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            isPreviewActive: false\n          }\n        }));\n      });\n    };\n    setInterval(() => {\n      fetchHeartbeat(1);\n      fetchHeartbeat(2);\n    }, 2000);\n  }, []);\n  useEffect(() => {\n    const fetchCameraDetails = async () => {\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\n        try {\n          const baseURL = \"http://\" + serverInfo.camserver[1].ip + \":\" + serverInfo.camserver[1].portHTTP;\n          const response = await axios.get(baseURL + \"/get_all_camera_details\");\n          throwErrorIfNotSuccess(response, null);\n          setAllCameras(response.data.data);\n        } catch (error) {\n          showToast(\"Error in fetching camera details\", \"error\");\n          showToast(error.message, \"error\");\n        }\n      }\n    };\n    fetchCameraDetails();\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\n  const handleInputChange = (event, cameraId) => {\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        formValues: {\n          ...prevCameras[cameraId].formValues,\n          [event.target.name]: event.target.value\n        }\n      }\n    }));\n  };\n  useEffect(() => {\n    const canvas = canvasRefs[4].current;\n    const context = canvas.getContext('2d');\n\n    // Draw a hollow circle at x =100, y = 50\n    context.beginPath();\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\n    context.stroke();\n  }, []);\n  useEffect(() => {\n    const updateCameraComment = cameraId => {\n      const selectedCamera = allCameras.find(camera => camera.camera_id === cameras[cameraId].formValues.camId);\n      if (!selectedCamera) {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            comment: \"Select a camera\",\n            isVirtual: true\n          }\n        }));\n        return;\n      }\n      ;\n      const isVirtual = !selectedCamera.details.is_real;\n      let comment = selectedCamera.details.comment;\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          comment: comment,\n          isVirtual: isVirtual\n        }\n      }));\n    };\n    updateCameraComment(1);\n    updateCameraComment(2);\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\n  const showToast = (msg, type, delay = 2000) => {\n    toast[type](msg, {\n      position: \"bottom-right\",\n      autoClose: delay,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"dark\",\n      transition: Slide\n    });\n  };\n  const throwErrorIfNotSuccess = (response, toastId) => {\n    const success = response.data.success;\n    // raise error is success is false with response message\n    if (!success) {\n      if (toastId) {\n        toast.update(toastId, {\n          render: response.data.msg,\n          type: \"error\",\n          isLoading: false,\n          autoClose: 1000\n        });\n      }\n      throw new Error(response.data.msg);\n    }\n  };\n  const handleStreamToggle = async cameraId => {\n    // check if min max values are respected\n    const formValues = cameras[cameraId].formValues;\n    let error = false;\n    if (formValues.targetFPS < cameras[cameraId].formValuesMinMax.targetFPS.min || formValues.targetFPS > cameras[cameraId].formValuesMinMax.targetFPS.max) {\n      showToast(`Target FPS must be between ${cameras[cameraId].formValuesMinMax.targetFPS.min} and ${cameras[cameraId].formValuesMinMax.targetFPS.max}`, \"error\");\n      error = true;\n    }\n    if (formValues.exposureTime < cameras[cameraId].formValuesMinMax.exposureTime.min || formValues.exposureTime > cameras[cameraId].formValuesMinMax.exposureTime.max) {\n      showToast(`Exposure Time must be between ${cameras[cameraId].formValuesMinMax.exposureTime.min} and ${cameras[cameraId].formValuesMinMax.exposureTime.max}`, \"error\");\n      error = true;\n    }\n    if (formValues.gain < cameras[cameraId].formValuesMinMax.gain.min || formValues.gain > cameras[cameraId].formValuesMinMax.gain.max) {\n      showToast(`Gain must be between ${cameras[cameraId].formValuesMinMax.gain.min} and ${cameras[cameraId].formValuesMinMax.gain.max}`, \"error\");\n      error = true;\n    }\n    if (error) return;\n    const isStreaming = cameras[cameraId].isStreaming;\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        isSwitchActive: false\n      }\n    }));\n    const action = isStreaming ? 'Stopping' : 'Starting';\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\n      position: \"bottom-center\",\n      autoClose: 2000,\n      theme: \"dark\",\n      transition: Slide\n    });\n    try {\n      const endpoint = isStreaming ? '/stop_camera/' : '/start_camera/';\n      const data = isStreaming ? {} : {\n        camera_id: cameras[cameraId].formValues.camId,\n        fps: cameras[cameraId].formValues.targetFPS,\n        exposure_time: cameras[cameraId].formValues.exposureTime,\n        gain: cameras[cameraId].formValues.gain,\n        image_format: cameras[cameraId].formValues.imageFormat,\n        folder_path: cameras[cameraId].formValues.folderPath,\n        request_locate: cameras[cameraId].formValues.requestLocate\n      };\n      const baseURL = \"http://\" + serverInfo.camserver[cameraId].ip + \":\" + serverInfo.camserver[cameraId].portHTTP;\n      const response = await axios.post(baseURL + endpoint, data);\n      throwErrorIfNotSuccess(response, toastId);\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true,\n          isStreaming: !isStreaming\n        }\n      }));\n      toast.update(toastId, {\n        render: response.data.msg,\n        type: response.data.success ? \"success\" : \"error\",\n        isLoading: false,\n        autoClose: 2000\n      });\n    } catch (error) {\n      // revert the camera switch to active\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true\n        }\n      }));\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\n      showToast(error.message, \"error\");\n    }\n  };\n  useEffect(() => {\n    const webSocketConnections = {}; // Store WebSocket connections\n\n    const connectToWebSocket = cameraId => {\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\n      let frameCount = 0;\n      let dataCount = 0;\n      let firstImageReceived = false;\n      const baseURL = serverInfo.camserver[cameraId].ip + \":\" + serverInfo.camserver[cameraId].portWS;\n      const websocket = new WebSocket(\"ws://\" + baseURL + \"/ws\");\n      webSocketConnections[cameraId] = websocket; // Store the connection\n      websocket.binaryType = 'blob';\n      const updateFpsAndSpeed = () => {\n        // set the fps and speed for the camera\n        const copyFrameCount = frameCount;\n        const copyDataCount = dataCount;\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            fps: copyFrameCount,\n            rxSpeed: copyDataCount / 1024\n          }\n        }));\n        frameCount = 0;\n        dataCount = 0;\n      };\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRefs[cameraId].current;\n        const ctx = canvas.getContext('2d');\n        if (!firstImageReceived) {\n          // now apply the rule that max width is 1000\n          const scaleFactor = maxWidth / img.width;\n          canvas.width = img.width * scaleFactor;\n          canvas.height = img.height * scaleFactor;\n          firstImageReceived = true;\n          setCameras(prevCameras => ({\n            ...prevCameras,\n            [cameraId]: {\n              ...prevCameras[cameraId],\n              isFirstImageReceived: true,\n              canvasWidth: canvas.width,\n              canvasHeight: canvas.height\n            }\n          }));\n          imageProps.width = img.width;\n          imageProps.height = img.height;\n          setImageProps({\n            width: img.width,\n            height: img.height\n          });\n          drawProps.scale = scaleFactor;\n          drawProps.centerX = canvas.width / 2;\n          drawProps.centerY = canvas.height / 2;\n          const rect = canvas.getBoundingClientRect();\n          drawProps.startX = rect.left;\n          drawProps.startY = rect.top;\n          drawProps.endX = rect.right;\n          drawProps.endY = rect.bottom;\n\n          // set the height and width of the other two canvases\n          canvasRefs[3].current.width = canvas.width;\n          canvasRefs[3].current.height = canvas.height;\n          canvasRefs[4].current.width = canvas.width;\n          canvasRefs[4].current.height = canvas.height;\n\n          // since i changed the values manually, i need to update the context by calling setDrawProps\n          // i set the values directly because I want the effect to be instant and not wait for the next render\n          setDrawProps({\n            scale: scaleFactor,\n            centerX: canvas.width / 2,\n            centerY: canvas.height / 2,\n            startX: rect.left,\n            startY: rect.top,\n            endX: rect.right,\n            endY: rect.bottom\n          });\n        }\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n        URL.revokeObjectURL(img.src);\n      };\n      websocket.onmessage = event => {\n        const url = URL.createObjectURL(event.data);\n        img.src = url;\n        frameCount++;\n        dataCount += event.data.size;\n      };\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\n      websocket.onerror = error => console.error('WebSocket error:', error);\n      websocket.onclose = () => {\n        console.log(`Disconnected from Cam Server ${cameraId}`);\n        clearInterval(intervalId);\n        delete webSocketConnections[cameraId]; // Remove connection from the object\n      };\n    };\n    connectToWebSocket(1);\n    connectToWebSocket(2);\n\n    // Clean up WebSocket connections when component unmounts\n    return () => {\n      Object.values(webSocketConnections).forEach(ws => ws.close());\n    };\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\n  const renderCameraControls = cameraId => {\n    const {\n      isPreviewActive,\n      isStreaming,\n      showModalSettings,\n      isSwitchActive,\n      formValues,\n      comment,\n      isVirtual,\n      fps,\n      rxSpeed\n    } = cameras[cameraId];\n    const handleModalToggle = () => setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        showModalSettings: !prevCameras[cameraId].showModalSettings\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-flex align-items-center me-3 fs-4 fw-bold\",\n        style: {\n          color: !isSwitchActive ? 'gray' : 'inherit'\n        },\n        children: [\"Cam \", cameraId, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '10px',\n            width: '10px',\n            backgroundColor: isPreviewActive ? 'green' : 'red',\n            borderRadius: '50%',\n            display: 'inline-block',\n            marginLeft: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          marginLeft: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleModalToggle,\n            disabled: !isPreviewActive || !isSwitchActive || isStreaming,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCog\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleStreamToggle(cameraId),\n            disabled: !isPreviewActive || !isSwitchActive,\n            style: {\n              backgroundColor: isStreaming ? 'orange' : ''\n            },\n            children: isStreaming ? 'Stop Stream' : 'Start Stream'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this), 1 == 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          marginLeft: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"FPS: \", fps.toFixed(2), \" | Rx Speed: \", (rxSpeed / 1024).toFixed(2), \" Mb/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 11\n      }, this)]\n    }, cameraId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCameraModal = cameraId => {\n    const {\n      showModalSettings,\n      formValues,\n      comment,\n      isVirtual,\n      formValuesMinMax\n    } = cameras[cameraId];\n    const handleCloseModal = () => setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        showModalSettings: false\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModalSettings,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Cam Server \", cameraId, \" Configuration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Camera ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"camId\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.camId,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 17\n              }, this), allCameras.map((camera, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: camera.camera_id,\n                children: camera.camera_id\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), isVirtual && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Folder Path\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"folderPath\",\n              placeholder: \"Enter folder path\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.folderPath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Target Streaming FPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 549,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"targetFPS\",\n              type: \"number\",\n              placeholder: \"Enter FPS\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.targetFPS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 15\n            }, this), formValues.targetFPS < formValuesMinMax.targetFPS.min || formValues.targetFPS > formValuesMinMax.targetFPS.max ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: 'red'\n              },\n              children: [\"Value must be between \", formValuesMinMax.targetFPS.min, \" and \", formValuesMinMax.targetFPS.max]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Exposure Time (ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"exposureTime\",\n              type: \"number\",\n              step: \"0.01\",\n              placeholder: \"Enter exposure time in ms\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.exposureTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 15\n            }, this), formValues.exposureTime < formValuesMinMax.exposureTime.min || formValues.exposureTime > formValuesMinMax.exposureTime.max ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: 'red'\n              },\n              children: [\"Value must be between \", formValuesMinMax.exposureTime.min, \" and \", formValuesMinMax.exposureTime.max]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"gain\",\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              max: \"100\",\n              placeholder: \"Enter gain\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.gain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this), formValues.gain < formValuesMinMax.gain.min || formValues.gain > formValuesMinMax.gain.max ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: 'red'\n              },\n              children: [\"Value must be between \", formValuesMinMax.gain.min, \" and \", formValuesMinMax.gain.max]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"imageFormat\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.imageFormat,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"compressed\",\n                children: \"Compressed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 597,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"original\",\n                children: \"Original\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: cameras[cameraId].canRequestLocate && /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Request Locate\",\n              onChange: e => {\n                setCameras(prevCameras => ({\n                  ...prevCameras,\n                  [cameraId]: {\n                    ...prevCameras[cameraId],\n                    formValues: {\n                      ...prevCameras[cameraId].formValues,\n                      requestLocate: e.target.checked\n                    }\n                  }\n                }));\n              },\n              checked: formValues.requestLocate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this)]\n    }, cameraId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row justify-content-between\",\n      children: [1, 2].map(cameraId => renderCameraControls(cameraId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        width: '100%',\n        height: '100%',\n        marginTop: '20px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n        placeItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[1],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 1,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[2],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 0.5,\n          zIndex: 2,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[3],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 3,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[4],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 4,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 7\n    }, this), [1, 2].map(cameraId => renderCameraModal(cameraId)), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 633,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraPreview, \"Vewgj7PbrmOwdIBplTV/HGS8mGU=\", false, function () {\n  return [useGlobalContext];\n});\n_c = CameraPreview;\nexport default CameraPreview;\nvar _c;\n$RefreshReg$(_c, \"CameraPreview\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Button","Form","FontAwesomeIcon","faCog","ToastContainer","toast","Slide","axios","useGlobalContext","jsxDEV","_jsxDEV","CameraPreview","_s","allCameras","setAllCameras","canvasRefs","imageProps","setImageProps","drawProps","setDrawProps","serverInfo","cameras","setCameras","drawing","maxWidth","setMaxWidth","fetchHeartbeat","cameraId","baseURL","camserver","ip","portHTTP","endpoint","api","get","then","response","prevCameras","isPreviewActive","catch","error","setInterval","fetchCameraDetails","showModalSettings","throwErrorIfNotSuccess","data","showToast","message","handleInputChange","event","formValues","target","name","value","canvas","current","context","getContext","beginPath","arc","Math","PI","stroke","updateCameraComment","selectedCamera","find","camera","camera_id","camId","comment","isVirtual","details","is_real","msg","type","delay","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","toastId","success","update","render","isLoading","Error","handleStreamToggle","targetFPS","formValuesMinMax","min","max","exposureTime","gain","isStreaming","isSwitchActive","action","loading","fps","exposure_time","image_format","imageFormat","folder_path","folderPath","request_locate","requestLocate","post","toLowerCase","webSocketConnections","connectToWebSocket","frameCount","dataCount","firstImageReceived","portWS","websocket","WebSocket","binaryType","updateFpsAndSpeed","copyFrameCount","copyDataCount","rxSpeed","intervalId","img","Image","onload","ctx","scaleFactor","width","height","isFirstImageReceived","canvasWidth","canvasHeight","scale","centerX","centerY","rect","getBoundingClientRect","startX","left","startY","top","endX","right","endY","bottom","drawImage","URL","revokeObjectURL","src","onmessage","url","createObjectURL","size","onopen","console","log","onerror","onclose","clearInterval","Object","values","forEach","ws","close","renderCameraControls","handleModalToggle","className","children","style","color","backgroundColor","borderRadius","display","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","disabled","icon","toFixed","renderCameraModal","handleCloseModal","show","onHide","Header","closeButton","Title","Body","Group","Label","Select","onChange","e","map","index","Text","Control","placeholder","step","canRequestLocate","Check","label","checked","marginTop","justifyContent","alignItems","placeItems","ref","gridArea","opacity","zIndex","_c","$RefreshReg$"],"sources":["F:/TweezerSoftware/tweezerui/src/components/CameraPreview/CameraPreview.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Slide } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useGlobalContext } from '../../GlobalContext';\r\n\r\n\r\n\r\nfunction CameraPreview() {\r\n  const [allCameras, setAllCameras] = useState([]);\r\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\r\n\r\n\r\n  const { canvasRefs, imageProps, setImageProps, drawProps, setDrawProps, serverInfo, cameras, setCameras } = useGlobalContext();\r\n\r\n  let drawing = false;\r\n\r\n \r\n\r\n\r\n\r\n  const [maxWidth, setMaxWidth] = useState(1000);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // set timeout to send request to /heartbeat of both the servers and it controls the is_preview and is switch active\r\n    // if the server is not responding, is_preview is false, is_switch_active is true\r\n\r\n\r\n\r\n    const fetchHeartbeat = (cameraId) => {\r\n\r\n\r\n      const baseURL = \"http://\" + serverInfo.camserver[cameraId].ip + \":\" + serverInfo.camserver[cameraId].portHTTP;\r\n      \r\n      const endpoint = '/heartbeat';\r\n\r\n      const api = baseURL + endpoint;\r\n\r\n     \r\n\r\n\r\n      axios.get(api)\r\n        .then((response) => {\r\n\r\n\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isPreviewActive: true\r\n            }\r\n          }));\r\n\r\n        })\r\n        .catch((error) => {\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isPreviewActive: false\r\n            }\r\n          }));\r\n\r\n\r\n        });\r\n    };\r\n\r\n    setInterval(() => {\r\n      fetchHeartbeat(1);\r\n      fetchHeartbeat(2);\r\n    }, 2000);\r\n\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchCameraDetails = async () => {\r\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\r\n        try {\r\n          const baseURL =   \"http://\" +   serverInfo.camserver[1].ip + \":\" + serverInfo.camserver[1].portHTTP;\r\n          const response = await axios.get(baseURL+ \"/get_all_camera_details\");\r\n          throwErrorIfNotSuccess(response, null);\r\n\r\n\r\n          setAllCameras(response.data.data);\r\n        } catch (error) {\r\n          showToast(\"Error in fetching camera details\", \"error\");\r\n          showToast(error.message, \"error\");\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCameraDetails();\r\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\r\n\r\n\r\n\r\n  const handleInputChange = (event, cameraId) => {\r\n\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        formValues: {\r\n          ...prevCameras[cameraId].formValues,\r\n          [event.target.name]: event.target.value,\r\n        },\r\n      }\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRefs[4].current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // Draw a hollow circle at x =100, y = 50\r\n    context.beginPath();\r\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\r\n    context.stroke();\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCameraComment = (cameraId) => {\r\n      const selectedCamera = allCameras.find((camera) => camera.camera_id === cameras[cameraId].formValues.camId);\r\n      if (!selectedCamera) {\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            comment: \"Select a camera\",\r\n            isVirtual: true,\r\n          }\r\n        }));\r\n\r\n        return\r\n      };\r\n\r\n      const isVirtual = !selectedCamera.details.is_real;\r\n      let comment = selectedCamera.details.comment;\r\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          comment: comment,\r\n          isVirtual: isVirtual,\r\n        }\r\n      }));\r\n    };\r\n\r\n    updateCameraComment(1);\r\n    updateCameraComment(2);\r\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\r\n\r\n  const showToast = (msg, type, delay = 2000) => {\r\n    toast[type](msg, {\r\n      position: \"bottom-right\",\r\n      autoClose: delay,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n  };\r\n\r\n  const throwErrorIfNotSuccess = (response, toastId) => {\r\n\r\n    const success = response.data.success;\r\n    // raise error is success is false with response message\r\n    if (!success) {\r\n\r\n\r\n      if (toastId) {\r\n        toast.update(toastId, {\r\n          render: response.data.msg,\r\n          type: \"error\",\r\n          isLoading: false,\r\n          autoClose: 1000,\r\n        });\r\n      }\r\n      throw new Error(response.data.msg);\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  const handleStreamToggle = async (cameraId) => {\r\n\r\n\r\n    // check if min max values are respected\r\n    const formValues = cameras[cameraId].formValues;\r\n\r\n    let error = false;\r\n\r\n    if (formValues.targetFPS < cameras[cameraId].formValuesMinMax.targetFPS.min || formValues.targetFPS > cameras[cameraId].formValuesMinMax.targetFPS.max) {\r\n      showToast(`Target FPS must be between ${cameras[cameraId].formValuesMinMax.targetFPS.min} and ${cameras[cameraId].formValuesMinMax.targetFPS.max}`, \"error\");\r\n      error = true;\r\n    }\r\n\r\n    if (formValues.exposureTime < cameras[cameraId].formValuesMinMax.exposureTime.min || formValues.exposureTime > cameras[cameraId].formValuesMinMax.exposureTime.max) {\r\n      showToast(`Exposure Time must be between ${cameras[cameraId].formValuesMinMax.exposureTime.min} and ${cameras[cameraId].formValuesMinMax.exposureTime.max}`, \"error\");\r\n      error = true;\r\n\r\n    }\r\n\r\n    if (formValues.gain < cameras[cameraId].formValuesMinMax.gain.min || formValues.gain > cameras[cameraId].formValuesMinMax.gain.max) {\r\n      showToast(`Gain must be between ${cameras[cameraId].formValuesMinMax.gain.min} and ${cameras[cameraId].formValuesMinMax.gain.max}`, \"error\");\r\n      error = true;\r\n    }\r\n\r\n    if (error) return;\r\n\r\n\r\n\r\n\r\n    const isStreaming = cameras[cameraId].isStreaming;\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        isSwitchActive: false,\r\n      }\r\n    }));\r\n\r\n    const action = isStreaming ? 'Stopping' : 'Starting';\r\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\r\n      position: \"bottom-center\",\r\n      autoClose: 2000,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n\r\n    try {\r\n      const endpoint = isStreaming ? '/stop_camera/' : '/start_camera/';\r\n      const data = isStreaming ? {} : {\r\n        camera_id: cameras[cameraId].formValues.camId,\r\n        fps: cameras[cameraId].formValues.targetFPS,\r\n        exposure_time: cameras[cameraId].formValues.exposureTime,\r\n        gain: cameras[cameraId].formValues.gain,\r\n        image_format: cameras[cameraId].formValues.imageFormat,\r\n        folder_path: cameras[cameraId].formValues.folderPath,\r\n        request_locate: cameras[cameraId].formValues.requestLocate\r\n      };\r\n\r\n      const baseURL = \"http://\" +  serverInfo.camserver[cameraId].ip + \":\" + serverInfo.camserver[cameraId].portHTTP;\r\n      const response = await axios.post(baseURL + endpoint, data);\r\n\r\n      throwErrorIfNotSuccess(response, toastId);\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n          isStreaming: !isStreaming,\r\n        }\r\n      }));\r\n\r\n      toast.update(toastId, {\r\n        render: response.data.msg,\r\n        type: response.data.success ? \"success\" : \"error\",\r\n        isLoading: false,\r\n        autoClose: 2000,\r\n      });\r\n    } catch (error) {\r\n\r\n      // revert the camera switch to active\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n        }\r\n      }));\r\n\r\n\r\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\r\n      showToast(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    const webSocketConnections = {}; // Store WebSocket connections\r\n\r\n    const connectToWebSocket = (cameraId) => {\r\n\r\n\r\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\r\n\r\n      let frameCount = 0;\r\n      let dataCount = 0;\r\n      let firstImageReceived = false;\r\n\r\n      const baseURL = serverInfo.camserver[cameraId].ip + \":\" + serverInfo.camserver[cameraId].portWS;\r\n\r\n      const websocket = new WebSocket(\"ws://\" + baseURL + \"/ws\");\r\n      webSocketConnections[cameraId] = websocket; // Store the connection\r\n      websocket.binaryType = 'blob';\r\n\r\n      const updateFpsAndSpeed = () => {\r\n       \r\n\r\n        // set the fps and speed for the camera\r\n        const copyFrameCount = frameCount;\r\n        const copyDataCount = dataCount;\r\n\r\n\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            fps: copyFrameCount,\r\n            rxSpeed: copyDataCount / 1024,\r\n          }\r\n        }));\r\n\r\n        frameCount = 0;\r\n        dataCount = 0;\r\n      };\r\n\r\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\r\n\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = canvasRefs[cameraId].current;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!firstImageReceived) {\r\n\r\n\r\n          // now apply the rule that max width is 1000\r\n          const scaleFactor = maxWidth / img.width;\r\n          canvas.width = img.width * scaleFactor;\r\n          canvas.height = img.height * scaleFactor;\r\n          firstImageReceived = true;\r\n\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isFirstImageReceived: true,\r\n              canvasWidth: canvas.width,\r\n              canvasHeight: canvas.height,\r\n            }\r\n\r\n          }));\r\n\r\n\r\n\r\n          imageProps.width = img.width;\r\n          imageProps.height = img.height;\r\n\r\n          setImageProps({\r\n            width: img.width,\r\n            height: img.height\r\n          });\r\n\r\n          drawProps.scale = scaleFactor;\r\n          drawProps.centerX = canvas.width / 2;\r\n          drawProps.centerY = canvas.height / 2;\r\n\r\n          const rect = canvas.getBoundingClientRect();\r\n          drawProps.startX = rect.left;\r\n          drawProps.startY = rect.top;\r\n          drawProps.endX = rect.right;\r\n          drawProps.endY = rect.bottom;\r\n\r\n\r\n          // set the height and width of the other two canvases\r\n          canvasRefs[3].current.width = canvas.width;\r\n          canvasRefs[3].current.height = canvas.height;\r\n          canvasRefs[4].current.width = canvas.width;\r\n          canvasRefs[4].current.height = canvas.height;\r\n\r\n          // since i changed the values manually, i need to update the context by calling setDrawProps\r\n          // i set the values directly because I want the effect to be instant and not wait for the next render\r\n          setDrawProps({\r\n            scale: scaleFactor,\r\n            centerX: canvas.width / 2,\r\n            centerY: canvas.height / 2,\r\n            startX: rect.left,\r\n            startY: rect.top,\r\n            endX: rect.right,\r\n            endY: rect.bottom\r\n          });\r\n\r\n\r\n\r\n\r\n        }\r\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\r\n        URL.revokeObjectURL(img.src);\r\n      };\r\n\r\n      websocket.onmessage = (event) => {\r\n\r\n        const url = URL.createObjectURL(event.data);\r\n        img.src = url;\r\n        frameCount++;\r\n        dataCount += event.data.size;\r\n      };\r\n\r\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\r\n      websocket.onerror = (error) => console.error('WebSocket error:', error);\r\n      websocket.onclose = () => {\r\n        console.log(`Disconnected from Cam Server ${cameraId}`);\r\n        clearInterval(intervalId);\r\n        delete webSocketConnections[cameraId]; // Remove connection from the object\r\n      };\r\n    };\r\n\r\n    connectToWebSocket(1);\r\n    connectToWebSocket(2);\r\n\r\n    // Clean up WebSocket connections when component unmounts\r\n    return () => {\r\n      Object.values(webSocketConnections).forEach(ws => ws.close());\r\n    };\r\n\r\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\r\n\r\n\r\n  const renderCameraControls = (cameraId) => {\r\n\r\n    const { isPreviewActive, isStreaming, showModalSettings, isSwitchActive, formValues, comment, isVirtual, fps, rxSpeed } = cameras[cameraId];\r\n    const handleModalToggle = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: !prevCameras[cameraId].showModalSettings,\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-center justify-content-center align-items-center\" key={cameraId}>\r\n\r\n\r\n        <span className=\"d-flex align-items-center me-3 fs-4 fw-bold\" style={{ color: !isSwitchActive ? 'gray' : 'inherit' }}>\r\n          Cam {cameraId}\r\n          <div style={{\r\n            height: '10px',\r\n            width: '10px',\r\n            backgroundColor: isPreviewActive ? 'green' : 'red',\r\n            borderRadius: '50%',\r\n            display: 'inline-block',\r\n            marginLeft: '5px'\r\n          }}></div>\r\n        </span>\r\n\r\n\r\n\r\n        {/* <div className=\"form-check form-switch fs-5\">\r\n        //   <input\r\n        //     className=\"form-check-input\"\r\n        //     type=\"checkbox\"\r\n        //     role=\"switch\"\r\n        //     disabled={!isSwitchActive}\r\n        //     checked={isPreviewActive}\r\n        //     onChange={() => handlePreviewToggle(cameraId)}\r\n        //   />\r\n        // </div> */}\r\n\r\n        <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n          <div className=\"btn-group\">\r\n            <Button variant=\"primary\" onClick={handleModalToggle} disabled={!isPreviewActive || !isSwitchActive || isStreaming}>\r\n              <FontAwesomeIcon icon={faCog} />\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => handleStreamToggle(cameraId)}\r\n              disabled={!isPreviewActive || !isSwitchActive}\r\n              style={{ backgroundColor: isStreaming ? 'orange' : '' }}\r\n            >\r\n              {isStreaming ? 'Stop Stream' : 'Start Stream'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {1 == 1 && (\r\n          <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n            <div>FPS: {fps.toFixed(2)} | Rx Speed: {(rxSpeed / 1024).toFixed(2)} Mb/s</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCameraModal = (cameraId) => {\r\n    const { showModalSettings, formValues, comment, isVirtual, formValuesMinMax } = cameras[cameraId];\r\n    const handleCloseModal = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: false,\r\n      }\r\n    }));\r\n\r\n    return (\r\n\r\n      <Modal show={showModalSettings} onHide={handleCloseModal} key={cameraId}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Cam Server {cameraId} Configuration</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Camera ID</Form.Label>\r\n              <Form.Select name=\"camId\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.camId}>\r\n                <option value=\"\">Select Option</option>\r\n                {allCameras.map((camera, index) => (\r\n                  <option key={index} value={camera.camera_id}>\r\n                    {camera.camera_id}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              <Form.Text className=\"text-muted\">\r\n                {comment}\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {isVirtual && (\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Folder Path</Form.Label>\r\n                <Form.Control name=\"folderPath\" placeholder=\"Enter folder path\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.folderPath} />\r\n              </Form.Group>\r\n            )}\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Target Streaming FPS</Form.Label>\r\n              <Form.Control name=\"targetFPS\" type=\"number\" placeholder=\"Enter FPS\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.targetFPS} />\r\n              {formValues.targetFPS < formValuesMinMax.targetFPS.min || formValues.targetFPS > formValuesMinMax.targetFPS.max ? (\r\n                <Form.Text style={{ color: 'red' }}>\r\n                  Value must be between {formValuesMinMax.targetFPS.min} and {formValuesMinMax.targetFPS.max}\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Exposure Time (ms)</Form.Label>\r\n              <Form.Control\r\n                name=\"exposureTime\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter exposure time in ms\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.exposureTime}\r\n              />\r\n              {formValues.exposureTime < formValuesMinMax.exposureTime.min || formValues.exposureTime > formValuesMinMax.exposureTime.max ? (\r\n                <Form.Text style={{ color: 'red' }}>\r\n                  Value must be between {formValuesMinMax.exposureTime.min} and {formValuesMinMax.exposureTime.max}\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Gain</Form.Label>\r\n              <Form.Control\r\n                name=\"gain\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                placeholder=\"Enter gain\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.gain}\r\n              />\r\n              {formValues.gain < formValuesMinMax.gain.min || formValues.gain > formValuesMinMax.gain.max ? (\r\n                <Form.Text style={{ color: 'red' }}>\r\n                  Value must be between {formValuesMinMax.gain.min} and {formValuesMinMax.gain.max}\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Image Format</Form.Label>\r\n              <Form.Select name=\"imageFormat\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.imageFormat}>\r\n                <option value=\"compressed\">Compressed</option>\r\n                <option value=\"original\">Original</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              {cameras[cameraId].canRequestLocate && (\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Request Locate\"\r\n                  onChange={(e) => {\r\n                    setCameras(prevCameras => ({\r\n                      ...prevCameras,\r\n                      [cameraId]: {\r\n                        ...prevCameras[cameraId],\r\n                        formValues: {\r\n                          ...prevCameras[cameraId].formValues,\r\n                          requestLocate: e.target.checked\r\n                        }\r\n                      }\r\n                    }));\r\n                  }}\r\n                  checked={formValues.requestLocate}\r\n                />\r\n              )}\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        {[1, 2].map(cameraId => renderCameraControls(cameraId))}\r\n      </div>\r\n      {/* <div className=\"mt-3\">\r\n        <Form.Range \r\n          min={500} \r\n          max={5000} \r\n          step={100} \r\n          value={maxWidth} \r\n        \r\n        />\r\n        <span className=\"ms-2\">Zoom:</span>\r\n      </div> */}\r\n\r\n      <div style={{\r\n        display: 'grid',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        placeItems: 'center'\r\n      }}>\r\n        <canvas\r\n          ref={canvasRefs[1]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 1,\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRefs[2]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 0.5,\r\n            zIndex: 2,\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRefs[3]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 3,\r\n            backgroundColor: 'transparent',\r\n\r\n\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRefs[4]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 4,\r\n            backgroundColor: 'transparent'\r\n\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {[1, 2].map(cameraId => renderCameraModal(cameraId))}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CameraPreview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}