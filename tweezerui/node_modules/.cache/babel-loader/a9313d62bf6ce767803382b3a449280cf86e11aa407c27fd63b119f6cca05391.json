{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import{Modal,Button,Form}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCog}from'@fortawesome/free-solid-svg-icons';import'bootstrap/dist/css/bootstrap.min.css';import{ToastContainer,toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{Slide}from'react-toastify';import axios from'axios';import{useGlobalContext}from'../../GlobalContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const camServerURLs={1:\"http://10.0.63.153:4001\",2:\"http://10.0.63.153:4002\"};function CameraPreview(){const[allCameras,setAllCameras]=useState([]);// const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\nconst canvasTrackRef=useRef(null);const canvasHologramRef=useRef(null);const{canvasRefs,imageProps,setImageProps,drawProps,setDrawProps,serverInfo,cameras,setCameras}=useGlobalContext();let drawing=false;const draw=event=>{if(!drawing)return;const canvas=canvasHologramRef.current;const ctx=canvas.getContext('2d');const rect=canvas.getBoundingClientRect();// get the position of the canvas\nconst x=event.clientX-drawProps.startX;const y=event.clientY-drawProps.startY;ctx.lineWidth=5;ctx.lineCap='round';ctx.strokeStyle='red';ctx.lineTo(x,y);ctx.stroke();ctx.beginPath();ctx.moveTo(x,y);};const startDrawing=event=>{drawing=true;draw(event);};const stopDrawing=()=>{drawing=false;const canvas=canvasHologramRef.current;const ctx=canvas.getContext('2d');ctx.beginPath();};useEffect(()=>{const canvas=canvasHologramRef.current;canvas.addEventListener('mousedown',startDrawing);canvas.addEventListener('mousemove',draw);canvas.addEventListener('mouseup',stopDrawing);canvas.addEventListener('mouseout',stopDrawing);return()=>{canvas.removeEventListener('mousedown',startDrawing);canvas.removeEventListener('mousemove',draw);canvas.removeEventListener('mouseup',stopDrawing);canvas.removeEventListener('mouseout',stopDrawing);};},[]);const[maxWidth,setMaxWidth]=useState(1000);useEffect(()=>{// set timeout to send request to /heartbeat of both the servers and it controls the is_preview and is switch active\n// if the server is not responding, is_preview is false, is_switch_active is true\nconst fetchHeartbeat=cameraId=>{const baseURL=camServerURLs[cameraId];const endpoint='/heartbeat';axios.get(baseURL+endpoint).then(response=>{setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],isPreviewActive:true}}));}).catch(error=>{setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],isPreviewActive:false}}));});};setInterval(()=>{fetchHeartbeat(1);fetchHeartbeat(2);},2000);},[]);useEffect(()=>{const fetchCameraDetails=async()=>{if(cameras[1].showModalSettings||cameras[2].showModalSettings){try{const response=await axios.get(camServerURLs[1]+\"/get_all_camera_details\");throwErrorIfNotSuccess(response,null);setAllCameras(response.data.data);}catch(error){showToast(\"Error in fetching camera details\",\"error\");showToast(error.message,\"error\");}}};fetchCameraDetails();},[cameras[1].showModalSettings,cameras[2].showModalSettings]);const handleInputChange=(event,cameraId)=>{setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],formValues:{...prevCameras[cameraId].formValues,[event.target.name]:event.target.value}}}));};useEffect(()=>{const canvas=canvasHologramRef.current;const context=canvas.getContext('2d');// Draw a hollow circle at x =100, y = 50\ncontext.beginPath();context.arc(150,50,20,0,2*Math.PI);context.stroke();},[]);useEffect(()=>{const updateCameraComment=cameraId=>{const selectedCamera=allCameras.find(camera=>camera.camera_id===cameras[cameraId].formValues.camId);if(!selectedCamera){setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],comment:\"Select a camera\",isVirtual:true}}));return;};const isVirtual=!selectedCamera.details.is_real;let comment=selectedCamera.details.comment;comment=comment+\" | \"+(isVirtual?\"Virtual Camera\":\"Real Camera\");setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],comment:comment,isVirtual:isVirtual}}));};updateCameraComment(1);updateCameraComment(2);},[cameras[1].formValues.camId,cameras[2].formValues.camId,allCameras]);const showToast=function(msg,type){let delay=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2000;toast[type](msg,{position:\"bottom-right\",autoClose:delay,hideProgressBar:false,closeOnClick:true,pauseOnHover:true,draggable:true,progress:undefined,theme:\"dark\",transition:Slide});};const throwErrorIfNotSuccess=(response,toastId)=>{const success=response.data.success;// raise error is success is false with response message\nif(!success){if(toastId){toast.update(toastId,{render:response.data.msg,type:\"error\",isLoading:false,autoClose:1000});}throw new Error(response.data.msg);}};const handleStreamToggle=async cameraId=>{const isStreaming=cameras[cameraId].isStreaming;setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],isSwitchActive:false}}));const action=isStreaming?'Stopping':'Starting';let toastId=toast.loading(\"\".concat(action,\" \").concat(cameras[cameraId].formValues.camId),{position:\"top-center\",autoClose:2000,theme:\"dark\",transition:Slide});try{const endpoint=isStreaming?'stop_camera/':'start_camera/';const data=isStreaming?{}:{camera_id:cameras[cameraId].formValues.camId,fps:cameras[cameraId].formValues.targetFPS,exposure_time:cameras[cameraId].formValues.exposureTime,gain:cameras[cameraId].formValues.gain,image_format:cameras[cameraId].formValues.imageFormat,folder_path:cameras[cameraId].formValues.folderPath,request_locate:cameras[cameraId].formValues.requestLocate};const response=await axios.post(camServerURLs[cameraId]+\"/\".concat(endpoint),data);throwErrorIfNotSuccess(response,toastId);setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],isSwitchActive:true,isStreaming:!isStreaming}}));toast.update(toastId,{render:response.data.msg,type:response.data.success?\"success\":\"error\",isLoading:false,autoClose:2000});}catch(error){// revert the camera switch to active\nsetCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],isSwitchActive:true}}));showToast(\"Error in \".concat(action.toLowerCase(),\" camera \").concat(cameraId),\"error\");showToast(error.message,\"error\");}};useEffect(()=>{const webSocketConnections={};// Store WebSocket connections\nconst connectToWebSocket=cameraId=>{if(!cameras[cameraId].isPreviewActive||webSocketConnections[cameraId])return;let frameCount=0;let dataCount=0;let firstImageReceived=false;const ip=camServerURLs[cameraId].replace(/(^\\w+:|^)\\/\\//,'');const websocket=new WebSocket(\"ws://\"+ip+\"/ws\");webSocketConnections[cameraId]=websocket;// Store the connection\nwebsocket.binaryType='blob';const updateFpsAndSpeed=()=>{console.log(frameCount,cameraId);// set the fps and speed for the camera\nconst copyFrameCount=frameCount;const copyDataCount=dataCount;setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],fps:copyFrameCount,rxSpeed:copyDataCount/1024}}));frameCount=0;dataCount=0;};const intervalId=setInterval(updateFpsAndSpeed,1000);const img=new Image();img.onload=()=>{const canvas=canvasRefs[cameraId].current;const ctx=canvas.getContext('2d');if(!firstImageReceived){// now apply the rule that max width is 1000\nconst scaleFactor=maxWidth/img.width;canvas.width=img.width*scaleFactor;canvas.height=img.height*scaleFactor;firstImageReceived=true;setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],isFirstImageReceived:true,canvasWidth:canvas.width,canvasHeight:canvas.height}}));imageProps.width=img.width;imageProps.height=img.height;setImageProps({width:img.width,height:img.height});drawProps.scale=scaleFactor;drawProps.centerX=canvas.width/2;drawProps.centerY=canvas.height/2;const rect=canvas.getBoundingClientRect();drawProps.startX=rect.left;drawProps.startY=rect.top;drawProps.endX=rect.right;drawProps.endY=rect.bottom;// set the height and width of the other two canvases\ncanvasTrackRef.current.width=canvas.width;canvasTrackRef.current.height=canvas.height;canvasHologramRef.current.width=canvas.width;canvasHologramRef.current.height=canvas.height;// since i changed the values manually, i need to update the context by calling setDrawProps\n// i set the values directly because I want the effect to be instant and not wait for the next render\nsetDrawProps({scale:scaleFactor,centerX:canvas.width/2,centerY:canvas.height/2,startX:rect.left,startY:rect.top,endX:rect.right,endY:rect.bottom});}ctx.drawImage(img,0,0,img.width,img.height,0,0,canvas.width,canvas.height);URL.revokeObjectURL(img.src);};websocket.onmessage=event=>{const url=URL.createObjectURL(event.data);img.src=url;frameCount++;dataCount+=event.data.size;};websocket.onopen=()=>console.log(\"Connected to Cam Server \".concat(cameraId));websocket.onerror=error=>console.error('WebSocket error:',error);websocket.onclose=()=>{console.log(\"Disconnected from Cam Server \".concat(cameraId));clearInterval(intervalId);delete webSocketConnections[cameraId];// Remove connection from the object\n};};connectToWebSocket(1);connectToWebSocket(2);// Clean up WebSocket connections when component unmounts\nreturn()=>{Object.values(webSocketConnections).forEach(ws=>ws.close());};},[cameras[1].isPreviewActive,cameras[2].isPreviewActive]);const renderCameraControls=cameraId=>{console.log(\"gregergr\");const{isPreviewActive,isStreaming,showModalSettings,isSwitchActive,formValues,comment,isVirtual,fps,rxSpeed}=cameras[cameraId];const handleModalToggle=()=>setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],showModalSettings:!prevCameras[cameraId].showModalSettings}}));return/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-center justify-content-center align-items-center\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"d-flex align-items-center me-3 fs-4 fw-bold\",style:{color:!isSwitchActive?'gray':'inherit'},children:[\"Cam \",cameraId,/*#__PURE__*/_jsx(\"div\",{style:{height:'10px',width:'10px',backgroundColor:isPreviewActive?'green':'red',borderRadius:'50%',display:'inline-block',marginLeft:'5px'}})]}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",style:{marginLeft:'30px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:handleModalToggle,disabled:!isPreviewActive||!isSwitchActive||isStreaming,children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faCog})}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:()=>handleStreamToggle(cameraId),disabled:!isPreviewActive||!isSwitchActive,style:{backgroundColor:isStreaming?'orange':''},children:isStreaming?'Stop Stream':'Start Stream'})]})}),1==1&&/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center\",style:{marginLeft:'30px'},children:/*#__PURE__*/_jsxs(\"div\",{children:[\"FPS: \",fps.toFixed(2),\" | Rx Speed: \",(rxSpeed/1024).toFixed(2),\" Mb/s\"]})})]},cameraId);};const renderCameraModal=cameraId=>{const{showModalSettings,formValues,comment,isVirtual}=cameras[cameraId];const handleCloseModal=()=>setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],showModalSettings:false}}));return/*#__PURE__*/_jsxs(Modal,{show:showModalSettings,onHide:handleCloseModal,children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsxs(Modal.Title,{children:[\"Cam Server \",cameraId,\" Configuration\"]})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Form,{children:[/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Camera ID\"}),/*#__PURE__*/_jsxs(Form.Select,{name:\"camId\",onChange:e=>handleInputChange(e,cameraId),value:formValues.camId,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Option\"}),allCameras.map((camera,index)=>/*#__PURE__*/_jsx(\"option\",{value:camera.camera_id,children:camera.camera_id},index))]}),/*#__PURE__*/_jsx(Form.Text,{className:\"text-muted\",children:comment})]}),isVirtual&&/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Folder Path\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"folderPath\",placeholder:\"Enter folder path\",onChange:e=>handleInputChange(e,cameraId),value:formValues.folderPath})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Target Streaming FPS\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"targetFPS\",type:\"number\",placeholder:\"Enter FPS\",onChange:e=>handleInputChange(e,cameraId),value:formValues.targetFPS})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Exposure Time (ms)\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"exposureTime\",type:\"number\",step:\"0.01\",placeholder:\"Enter exposure time in ms\",onChange:e=>handleInputChange(e,cameraId),value:formValues.exposureTime})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Gain\"}),/*#__PURE__*/_jsx(Form.Control,{name:\"gain\",type:\"number\",step:\"0.01\",placeholder:\"Enter gain\",onChange:e=>handleInputChange(e,cameraId),value:formValues.gain})]}),/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Image Format\"}),/*#__PURE__*/_jsxs(Form.Select,{name:\"imageFormat\",onChange:e=>handleInputChange(e,cameraId),value:formValues.imageFormat,children:[/*#__PURE__*/_jsx(\"option\",{value:\"compressed\",children:\"Compressed\"}),/*#__PURE__*/_jsx(\"option\",{value:\"original\",children:\"Original\"})]})]}),/*#__PURE__*/_jsx(Form.Group,{className:\"mb-3\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Request Locate\",onChange:e=>{setCameras(prevCameras=>({...prevCameras,[cameraId]:{...prevCameras[cameraId],formValues:{...prevCameras[cameraId].formValues,requestLocate:e.target.checked}}}));},checked:formValues.requestLocate})})]})})]},cameraId);};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex flex-row justify-content-between\",children:[1,2].map(cameraId=>renderCameraControls(cameraId))}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'grid',width:'100%',height:'100%',marginTop:'20px',justifyContent:'center',alignItems:'center',position:'relative',placeItems:'center'},children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRefs[1],style:{gridArea:'1 / 1 / 2 / 2',opacity:1.0,zIndex:1,backgroundColor:'transparent'}}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRefs[2],style:{gridArea:'1 / 1 / 2 / 2',opacity:0.5,zIndex:2,backgroundColor:'transparent'}}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasTrackRef,style:{gridArea:'1 / 1 / 2 / 2',opacity:1.0,zIndex:3,backgroundColor:'transparent'}}),/*#__PURE__*/_jsx(\"canvas\",{ref:canvasHologramRef,style:{gridArea:'1 / 1 / 2 / 2',opacity:1.0,zIndex:4,backgroundColor:'transparent'}})]}),[1,2].map(cameraId=>renderCameraModal(cameraId)),/*#__PURE__*/_jsx(ToastContainer,{})]});}export default CameraPreview;","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Button","Form","FontAwesomeIcon","faCog","ToastContainer","toast","Slide","axios","useGlobalContext","jsx","_jsx","jsxs","_jsxs","camServerURLs","CameraPreview","allCameras","setAllCameras","canvasTrackRef","canvasHologramRef","canvasRefs","imageProps","setImageProps","drawProps","setDrawProps","serverInfo","cameras","setCameras","drawing","draw","event","canvas","current","ctx","getContext","rect","getBoundingClientRect","x","clientX","startX","y","clientY","startY","lineWidth","lineCap","strokeStyle","lineTo","stroke","beginPath","moveTo","startDrawing","stopDrawing","addEventListener","removeEventListener","maxWidth","setMaxWidth","fetchHeartbeat","cameraId","baseURL","endpoint","get","then","response","prevCameras","isPreviewActive","catch","error","setInterval","fetchCameraDetails","showModalSettings","throwErrorIfNotSuccess","data","showToast","message","handleInputChange","formValues","target","name","value","context","arc","Math","PI","updateCameraComment","selectedCamera","find","camera","camera_id","camId","comment","isVirtual","details","is_real","msg","type","delay","arguments","length","undefined","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","theme","transition","toastId","success","update","render","isLoading","Error","handleStreamToggle","isStreaming","isSwitchActive","action","loading","concat","fps","targetFPS","exposure_time","exposureTime","gain","image_format","imageFormat","folder_path","folderPath","request_locate","requestLocate","post","toLowerCase","webSocketConnections","connectToWebSocket","frameCount","dataCount","firstImageReceived","ip","replace","websocket","WebSocket","binaryType","updateFpsAndSpeed","console","log","copyFrameCount","copyDataCount","rxSpeed","intervalId","img","Image","onload","scaleFactor","width","height","isFirstImageReceived","canvasWidth","canvasHeight","scale","centerX","centerY","left","top","endX","right","endY","bottom","drawImage","URL","revokeObjectURL","src","onmessage","url","createObjectURL","size","onopen","onerror","onclose","clearInterval","Object","values","forEach","ws","close","renderCameraControls","handleModalToggle","className","children","style","color","backgroundColor","borderRadius","display","marginLeft","variant","onClick","disabled","icon","toFixed","renderCameraModal","handleCloseModal","show","onHide","Header","closeButton","Title","Body","Group","Label","Select","onChange","e","map","index","Text","Control","placeholder","step","Check","label","checked","marginTop","justifyContent","alignItems","placeItems","ref","gridArea","opacity","zIndex"],"sources":["F:/tweezerui/src/components/CameraPreview/CameraPreview.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Slide } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useGlobalContext } from '../../GlobalContext';\r\n\r\n\r\nconst camServerURLs = {\r\n  1: \"http://10.0.63.153:4001\",\r\n  2: \"http://10.0.63.153:4002\"\r\n};\r\n\r\nfunction CameraPreview() {\r\n  const [allCameras, setAllCameras] = useState([]);\r\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\r\n  const canvasTrackRef = useRef(null);\r\n  const canvasHologramRef = useRef(null);\r\n\r\n  const { canvasRefs, imageProps, setImageProps, drawProps, setDrawProps, serverInfo, cameras, setCameras } = useGlobalContext();\r\n\r\n  let drawing = false;\r\n\r\n  const draw = (event) => {\r\n    if (!drawing) return;\r\n    const canvas = canvasHologramRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const rect = canvas.getBoundingClientRect(); // get the position of the canvas\r\n\r\n    const x = event.clientX - drawProps.startX;\r\n    const y = event.clientY - drawProps.startY;\r\n\r\n    ctx.lineWidth = 5;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = 'red';\r\n\r\n    ctx.lineTo(x, y);\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n  };\r\n\r\n  const startDrawing = (event) => {\r\n    drawing = true;\r\n    draw(event);\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    drawing = false;\r\n    const canvas = canvasHologramRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.beginPath();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasHologramRef.current;\r\n    canvas.addEventListener('mousedown', startDrawing);\r\n    canvas.addEventListener('mousemove', draw);\r\n    canvas.addEventListener('mouseup', stopDrawing);\r\n    canvas.addEventListener('mouseout', stopDrawing);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', startDrawing);\r\n      canvas.removeEventListener('mousemove', draw);\r\n      canvas.removeEventListener('mouseup', stopDrawing);\r\n      canvas.removeEventListener('mouseout', stopDrawing);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  const [maxWidth, setMaxWidth] = useState(1000);\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // set timeout to send request to /heartbeat of both the servers and it controls the is_preview and is switch active\r\n    // if the server is not responding, is_preview is false, is_switch_active is true\r\n\r\n \r\n\r\n    const fetchHeartbeat = (cameraId) => {\r\n\r\n\r\n      const baseURL = camServerURLs[cameraId];\r\n      const endpoint = '/heartbeat';\r\n\r\n\r\n      axios.get(baseURL + endpoint)\r\n        .then((response) => {\r\n\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isPreviewActive: true\r\n            }\r\n          }));\r\n\r\n        })\r\n        .catch((error) => {\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isPreviewActive: false\r\n            }\r\n          }));\r\n\r\n\r\n        });\r\n    };\r\n\r\n    setInterval(() => {\r\n      fetchHeartbeat(1);\r\n      fetchHeartbeat(2);\r\n    }, 2000);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchCameraDetails = async () => {\r\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\r\n        try {\r\n          const response = await axios.get(camServerURLs[1] + \"/get_all_camera_details\");\r\n          throwErrorIfNotSuccess(response, null);\r\n\r\n\r\n          setAllCameras(response.data.data);\r\n        } catch (error) {\r\n          showToast(\"Error in fetching camera details\", \"error\");\r\n          showToast(error.message, \"error\");\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCameraDetails();\r\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\r\n\r\n\r\n\r\n  const handleInputChange = (event, cameraId) => {\r\n\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        formValues: {\r\n          ...prevCameras[cameraId].formValues,\r\n          [event.target.name]: event.target.value,\r\n        },\r\n      }\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasHologramRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // Draw a hollow circle at x =100, y = 50\r\n    context.beginPath();\r\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\r\n    context.stroke();\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCameraComment = (cameraId) => {\r\n      const selectedCamera = allCameras.find((camera) => camera.camera_id === cameras[cameraId].formValues.camId);\r\n      if (!selectedCamera) {\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            comment: \"Select a camera\",\r\n            isVirtual: true,\r\n          }\r\n        }));\r\n\r\n        return\r\n      };\r\n\r\n      const isVirtual = !selectedCamera.details.is_real;\r\n      let comment = selectedCamera.details.comment;\r\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          comment: comment,\r\n          isVirtual: isVirtual,\r\n        }\r\n      }));\r\n    };\r\n\r\n    updateCameraComment(1);\r\n    updateCameraComment(2);\r\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\r\n\r\n  const showToast = (msg, type, delay = 2000) => {\r\n    toast[type](msg, {\r\n      position: \"bottom-right\",\r\n      autoClose: delay,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n  };\r\n\r\n  const throwErrorIfNotSuccess = (response, toastId) => {\r\n\r\n    const success = response.data.success;\r\n    // raise error is success is false with response message\r\n    if (!success) {\r\n\r\n\r\n      if (toastId) {\r\n        toast.update(toastId, {\r\n          render: response.data.msg,\r\n          type: \"error\",\r\n          isLoading: false,\r\n          autoClose: 1000,\r\n        });\r\n      }\r\n      throw new Error(response.data.msg);\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  const handleStreamToggle = async (cameraId) => {\r\n    const isStreaming = cameras[cameraId].isStreaming;\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        isSwitchActive: false,\r\n      }\r\n    }));\r\n\r\n    const action = isStreaming ? 'Stopping' : 'Starting';\r\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n\r\n    try {\r\n      const endpoint = isStreaming ? 'stop_camera/' : 'start_camera/';\r\n      const data = isStreaming ? {} : {\r\n        camera_id: cameras[cameraId].formValues.camId,\r\n        fps: cameras[cameraId].formValues.targetFPS,\r\n        exposure_time: cameras[cameraId].formValues.exposureTime,\r\n        gain: cameras[cameraId].formValues.gain,\r\n        image_format: cameras[cameraId].formValues.imageFormat,\r\n        folder_path: cameras[cameraId].formValues.folderPath,\r\n        request_locate: cameras[cameraId].formValues.requestLocate\r\n      };\r\n\r\n      const response = await axios.post(camServerURLs[cameraId] + `/${endpoint}`, data);\r\n\r\n      throwErrorIfNotSuccess(response, toastId);\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n          isStreaming: !isStreaming,\r\n        }\r\n      }));\r\n\r\n      toast.update(toastId, {\r\n        render: response.data.msg,\r\n        type: response.data.success ? \"success\" : \"error\",\r\n        isLoading: false,\r\n        autoClose: 2000,\r\n      });\r\n    } catch (error) {\r\n\r\n      // revert the camera switch to active\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n        }\r\n      }));\r\n\r\n\r\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\r\n      showToast(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const webSocketConnections = {}; // Store WebSocket connections\r\n\r\n    const connectToWebSocket = (cameraId) => {\r\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\r\n\r\n      let frameCount = 0;\r\n      let dataCount = 0;\r\n      let firstImageReceived = false;\r\n\r\n      const ip = camServerURLs[cameraId].replace(/(^\\w+:|^)\\/\\//, '');\r\n      const websocket = new WebSocket(\"ws://\" + ip + \"/ws\");\r\n      webSocketConnections[cameraId] = websocket; // Store the connection\r\n      websocket.binaryType = 'blob';\r\n\r\n      const updateFpsAndSpeed = () => {\r\n        console.log(frameCount, cameraId)\r\n\r\n        // set the fps and speed for the camera\r\n        const copyFrameCount = frameCount;\r\n        const copyDataCount = dataCount;\r\n\r\n\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            fps: copyFrameCount,\r\n            rxSpeed: copyDataCount / 1024,\r\n          }\r\n        }));\r\n\r\n        frameCount = 0;\r\n        dataCount = 0;\r\n      };\r\n\r\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\r\n\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = canvasRefs[cameraId].current;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!firstImageReceived) {\r\n\r\n\r\n          // now apply the rule that max width is 1000\r\n          const scaleFactor = maxWidth / img.width;\r\n          canvas.width = img.width * scaleFactor;\r\n          canvas.height = img.height * scaleFactor;\r\n          firstImageReceived = true;\r\n\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isFirstImageReceived: true,\r\n              canvasWidth: canvas.width,\r\n              canvasHeight: canvas.height,\r\n            }\r\n\r\n          }));\r\n\r\n\r\n\r\n          imageProps.width = img.width;\r\n          imageProps.height = img.height;\r\n\r\n          setImageProps({\r\n            width: img.width,\r\n            height: img.height\r\n          });\r\n\r\n          drawProps.scale = scaleFactor;\r\n          drawProps.centerX = canvas.width / 2;\r\n          drawProps.centerY = canvas.height / 2;\r\n\r\n          const rect = canvas.getBoundingClientRect();\r\n          drawProps.startX = rect.left;\r\n          drawProps.startY = rect.top;\r\n          drawProps.endX = rect.right;\r\n          drawProps.endY = rect.bottom;\r\n\r\n\r\n          // set the height and width of the other two canvases\r\n          canvasTrackRef.current.width = canvas.width;\r\n          canvasTrackRef.current.height = canvas.height;\r\n          canvasHologramRef.current.width = canvas.width;\r\n          canvasHologramRef.current.height = canvas.height;\r\n\r\n          // since i changed the values manually, i need to update the context by calling setDrawProps\r\n          // i set the values directly because I want the effect to be instant and not wait for the next render\r\n          setDrawProps({\r\n            scale: scaleFactor,\r\n            centerX: canvas.width / 2,\r\n            centerY: canvas.height / 2,\r\n            startX: rect.left,\r\n            startY: rect.top,\r\n            endX: rect.right,\r\n            endY: rect.bottom\r\n          });\r\n\r\n\r\n\r\n\r\n        }\r\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\r\n        URL.revokeObjectURL(img.src);\r\n      };\r\n\r\n      websocket.onmessage = (event) => {\r\n        const url = URL.createObjectURL(event.data);\r\n        img.src = url;\r\n        frameCount++;\r\n        dataCount += event.data.size;\r\n      };\r\n\r\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\r\n      websocket.onerror = (error) => console.error('WebSocket error:', error);\r\n      websocket.onclose = () => {\r\n        console.log(`Disconnected from Cam Server ${cameraId}`);\r\n        clearInterval(intervalId);\r\n        delete webSocketConnections[cameraId]; // Remove connection from the object\r\n      };\r\n    };\r\n\r\n    connectToWebSocket(1);\r\n    connectToWebSocket(2);\r\n\r\n    // Clean up WebSocket connections when component unmounts\r\n    return () => {\r\n      Object.values(webSocketConnections).forEach(ws => ws.close());\r\n    };\r\n\r\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\r\n\r\n\r\n  const renderCameraControls = (cameraId) => {\r\n\r\n    console.log(\"gregergr\")\r\n    const { isPreviewActive, isStreaming, showModalSettings, isSwitchActive, formValues, comment, isVirtual, fps, rxSpeed } = cameras[cameraId];\r\n    const handleModalToggle = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: !prevCameras[cameraId].showModalSettings,\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-center justify-content-center align-items-center\" key={cameraId}>\r\n\r\n\r\n        <span className=\"d-flex align-items-center me-3 fs-4 fw-bold\" style={{ color: !isSwitchActive ? 'gray' : 'inherit' }}>\r\n          Cam {cameraId}\r\n          <div style={{\r\n            height: '10px',\r\n            width: '10px',\r\n            backgroundColor: isPreviewActive ? 'green' : 'red',\r\n            borderRadius: '50%',\r\n            display: 'inline-block',\r\n            marginLeft: '5px'\r\n          }}></div>\r\n        </span>\r\n\r\n\r\n\r\n        {/* <div className=\"form-check form-switch fs-5\">\r\n        //   <input\r\n        //     className=\"form-check-input\"\r\n        //     type=\"checkbox\"\r\n        //     role=\"switch\"\r\n        //     disabled={!isSwitchActive}\r\n        //     checked={isPreviewActive}\r\n        //     onChange={() => handlePreviewToggle(cameraId)}\r\n        //   />\r\n        // </div> */}\r\n\r\n        <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n          <div className=\"btn-group\">\r\n            <Button variant=\"primary\" onClick={handleModalToggle} disabled={!isPreviewActive || !isSwitchActive || isStreaming}>\r\n              <FontAwesomeIcon icon={faCog} />\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => handleStreamToggle(cameraId)}\r\n              disabled={!isPreviewActive || !isSwitchActive}\r\n              style={{ backgroundColor: isStreaming ? 'orange' : '' }}\r\n            >\r\n              {isStreaming ? 'Stop Stream' : 'Start Stream'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {1 == 1 && (\r\n          <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n            <div>FPS: {fps.toFixed(2)} | Rx Speed: {(rxSpeed / 1024).toFixed(2)} Mb/s</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCameraModal = (cameraId) => {\r\n    const { showModalSettings, formValues, comment, isVirtual } = cameras[cameraId];\r\n    const handleCloseModal = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: false,\r\n      }\r\n    }));\r\n\r\n    return (\r\n      \r\n      <Modal show={showModalSettings} onHide={handleCloseModal} key={cameraId}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Cam Server {cameraId} Configuration</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Camera ID</Form.Label>\r\n              <Form.Select name=\"camId\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.camId}>\r\n                <option value=\"\">Select Option</option>\r\n                {allCameras.map((camera, index) => (\r\n                  <option key={index} value={camera.camera_id}>\r\n                    {camera.camera_id}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              <Form.Text className=\"text-muted\">\r\n                {comment}\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {isVirtual && (\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Folder Path</Form.Label>\r\n                <Form.Control name=\"folderPath\" placeholder=\"Enter folder path\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.folderPath} />\r\n              </Form.Group>\r\n            )}\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Target Streaming FPS</Form.Label>\r\n              <Form.Control name=\"targetFPS\" type=\"number\" placeholder=\"Enter FPS\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.targetFPS} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Exposure Time (ms)</Form.Label>\r\n              <Form.Control\r\n                name=\"exposureTime\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter exposure time in ms\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.exposureTime}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Gain</Form.Label>\r\n              <Form.Control\r\n                name=\"gain\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter gain\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.gain}\r\n              />\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Image Format</Form.Label>\r\n              <Form.Select name=\"imageFormat\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.imageFormat}>\r\n                <option value=\"compressed\">Compressed</option>\r\n                <option value=\"original\">Original</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Request Locate\"\r\n                \r\n                onChange={(e) =>{\r\n                  setCameras(prevCameras => ({\r\n                    ...prevCameras,\r\n                    [cameraId]: {\r\n                      ...prevCameras[cameraId],\r\n                      formValues: {\r\n                        ...prevCameras[cameraId].formValues,\r\n                        requestLocate: e.target.checked\r\n                      }\r\n                    }\r\n                  }));\r\n                }}\r\n                checked={formValues.requestLocate}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"p-3\">      \r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        {[1, 2].map(cameraId => renderCameraControls(cameraId))}\r\n      </div>\r\n      {/* <div className=\"mt-3\">\r\n        <Form.Range \r\n          min={500} \r\n          max={5000} \r\n          step={100} \r\n          value={maxWidth} \r\n        \r\n        />\r\n        <span className=\"ms-2\">Zoom:</span>\r\n      </div> */}\r\n\r\n      <div style={{\r\n        display: 'grid',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        placeItems: 'center'\r\n      }}>\r\n        <canvas\r\n          ref={canvasRefs[1]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 1,\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRefs[2]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 0.5,\r\n            zIndex: 2,\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasTrackRef}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 3,\r\n            backgroundColor: 'transparent',\r\n\r\n\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasHologramRef}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 4,\r\n            backgroundColor: 'transparent'\r\n\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {[1, 2].map(cameraId => renderCameraModal(cameraId))}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CameraPreview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}