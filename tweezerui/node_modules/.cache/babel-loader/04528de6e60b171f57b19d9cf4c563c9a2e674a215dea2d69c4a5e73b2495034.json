{"ast":null,"code":"var _jsxFileName = \"F:\\\\tweezerui\\\\src\\\\components\\\\CameraPreview\\\\CameraPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Slide } from 'react-toastify';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainServerURL = \"http://10.0.63.153:4000/\";\nconst camServerURLs = {\n  1: \"http://10.0.63.153:4001\",\n  2: \"http://10.0.63.153:4002\"\n};\nfunction CameraPreview() {\n  _s();\n  const [allCameras, setAllCameras] = useState([]);\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\n  const canvasTrackRef = useRef(null);\n  const canvasHologramRef = useRef(null);\n  const canvasRefs = {\n    1: useRef(null),\n    2: useRef(null)\n  };\n  const [cameras, setCameras] = useState({\n    1: {\n      isPreviewActive: false,\n      isStreaming: false,\n      showModalSettings: false,\n      isSwitchActive: true,\n      formValues: {\n        camId: 'Select Option',\n        folderPath: 'F:/',\n        targetFPS: '10',\n        imageFormat: '',\n        exposureTime: \"10.0\",\n        gain: \"1.0\"\n      },\n      comment: \"Select the camera ID from the dropdown list\",\n      isVirtual: false,\n      fps: 0,\n      rxSpeed: 0.0,\n      isFirstImageReceived: false,\n      canvasWidth: -1,\n      canvasHeight: -1\n    },\n    2: {\n      isPreviewActive: false,\n      isStreaming: false,\n      showModalSettings: false,\n      isSwitchActive: true,\n      formValues: {\n        camId: 'Select Option',\n        folderPath: 'F:/',\n        targetFPS: '10',\n        imageFormat: '',\n        exposureTime: \"10.0\",\n        gain: \"1.0\"\n      },\n      comment: \"Select the camera ID from the dropdown list\",\n      isVirtual: false,\n      fps: 0,\n      rxSpeed: 0.0,\n      isFirstImageReceived: false,\n      canvasWidth: -1,\n      canvasHeight: -1\n    }\n  });\n  let maxWidth = 1000;\n  useEffect(() => {\n    const fetchCameraDetails = async () => {\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\n        try {\n          const response = await axios.get(camServerURLs[1] + \"/get_all_camera_details\");\n          setAllCameras(response.data.data);\n        } catch (error) {\n          showToast(\"Error in fetching camera details\", \"error\");\n          showToast(error.message, \"error\");\n        }\n      }\n    };\n    fetchCameraDetails();\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\n\n  // useEffect(() => {\n  //   Object.values(canvasRefs).forEach((canvasRef, cameraId) => {\n  //     if (canvasRef.current) {\n  //       setCanvasSize(prevCanvasSize => ({\n  //         ...prevCanvasSize,\n  //         [cameraId]: {\n  //           width: canvasRef.current.offsetWidth,\n  //           height: canvasRef.current.offsetHeight,\n\n  //         }\n  //       }));\n  //     }\n  //   });\n  // }, []);\n\n  const handleInputChange = (event, cameraId) => {\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        formValues: {\n          ...prevCameras[cameraId].formValues,\n          [event.target.name]: event.target.value\n        }\n      }\n    }));\n  };\n  useEffect(() => {\n    const canvas = canvasHologramRef.current;\n    const context = canvas.getContext('2d');\n\n    // Draw a hollow circle at x =100, y = 50\n    context.beginPath();\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\n    context.stroke();\n  }, []);\n  useEffect(() => {\n    const updateCameraComment = cameraId => {\n      const selectedCamera = allCameras.find(camera => camera.camera_id === cameras[cameraId].formValues.camId);\n      if (!selectedCamera) return;\n      const isVirtual = !selectedCamera.details.is_real;\n      let comment = selectedCamera.details.comment;\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          comment: comment,\n          isVirtual: isVirtual\n        }\n      }));\n    };\n    updateCameraComment(1);\n    updateCameraComment(2);\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\n  const showToast = (msg, type, delay = 2000) => {\n    toast[type](msg, {\n      position: \"bottom-right\",\n      autoClose: delay,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"dark\",\n      transition: Slide\n    });\n  };\n  const handlePreviewToggle = async cameraId => {\n    const isPreviewActive = cameras[cameraId].isPreviewActive;\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        isSwitchActive: false\n      }\n    }));\n    const action = isPreviewActive ? 'Shutting down' : 'Warming up';\n    let toastId = toast.loading(`${action} Cam ${cameraId} Server`, {\n      position: \"top-center\",\n      autoClose: 2000,\n      theme: \"dark\",\n      transition: Slide\n    });\n    try {\n      const endpoint = isPreviewActive ? 'stop_camera/' : `warmup/camserver/${cameraId}`;\n      const baseURL = isPreviewActive ? camServerURLs[cameraId] : mainServerURL; // Use main server for warming up\n      const response = await axios[isPreviewActive ? 'post' : 'get'](baseURL + endpoint);\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true,\n          isPreviewActive: !isPreviewActive,\n          isStreaming: isPreviewActive ? false : prevCameras[cameraId].isStreaming\n        }\n      }));\n      toast.update(toastId, {\n        render: response.data.msg,\n        type: response.data.success ? \"success\" : \"error\",\n        isLoading: false,\n        autoClose: 2000\n      });\n    } catch (error) {\n      showToast(`Error in ${action.toLowerCase()} Cam Server ${cameraId}`, \"error\");\n      showToast(error.message, \"error\");\n    }\n  };\n  const handleStreamToggle = async cameraId => {\n    const isStreaming = cameras[cameraId].isStreaming;\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        isSwitchActive: false\n      }\n    }));\n    const action = isStreaming ? 'Stopping' : 'Starting';\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\n      position: \"top-center\",\n      autoClose: 2000,\n      theme: \"dark\",\n      transition: Slide\n    });\n    try {\n      const endpoint = isStreaming ? 'stop_camera/' : 'start_camera/';\n      const data = isStreaming ? {} : {\n        camera_id: cameras[cameraId].formValues.camId,\n        fps: cameras[cameraId].formValues.targetFPS,\n        exposure_time: cameras[cameraId].formValues.exposureTime,\n        gain: cameras[cameraId].formValues.gain,\n        image_format: cameras[cameraId].formValues.imageFormat\n      };\n      const response = await axios.post(camServerURLs[cameraId] + `/${endpoint}`, data);\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true,\n          isStreaming: !isStreaming\n        }\n      }));\n      toast.update(toastId, {\n        render: response.data.msg,\n        type: response.data.success ? \"success\" : \"error\",\n        isLoading: false,\n        autoClose: 2000\n      });\n    } catch (error) {\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\n      showToast(error.message, \"error\");\n    }\n  };\n  useEffect(() => {\n    const webSocketConnections = {}; // Store WebSocket connections\n\n    const connectToWebSocket = cameraId => {\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\n      let frameCount = 0;\n      let dataCount = 0;\n      let firstImageReceived = false;\n      const ip = camServerURLs[cameraId].replace(/(^\\w+:|^)\\/\\//, '');\n      const websocket = new WebSocket(\"ws://\" + ip + \"/ws\");\n      webSocketConnections[cameraId] = websocket; // Store the connection\n      websocket.binaryType = 'blob';\n      const updateFpsAndSpeed = () => {\n        console.log(frameCount, cameraId);\n\n        // set the fps and speed for the camera\n        const copyFrameCount = frameCount;\n        const copyDataCount = dataCount;\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            fps: copyFrameCount,\n            rxSpeed: copyDataCount / 1024\n          }\n        }));\n        frameCount = 0;\n        dataCount = 0;\n      };\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRefs[cameraId].current;\n        const ctx = canvas.getContext('2d');\n        if (!firstImageReceived) {\n          // now apply the rule that max width is 1000\n          const scaleFactor = maxWidth / img.width;\n          canvas.width = img.width * scaleFactor;\n          canvas.height = img.height * scaleFactor;\n          firstImageReceived = true;\n        }\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n        URL.revokeObjectURL(img.src);\n      };\n      websocket.onmessage = event => {\n        const url = URL.createObjectURL(event.data);\n        img.src = url;\n        frameCount++;\n        dataCount += event.data.size;\n      };\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\n      websocket.onerror = error => console.error('WebSocket error:', error);\n      websocket.onclose = () => {\n        console.log(`Disconnected from Cam Server ${cameraId}`);\n        clearInterval(intervalId);\n        delete webSocketConnections[cameraId]; // Remove connection from the object\n      };\n    };\n    connectToWebSocket(1);\n    connectToWebSocket(2);\n\n    // Clean up WebSocket connections when component unmounts\n    return () => {\n      Object.values(webSocketConnections).forEach(ws => ws.close());\n    };\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\n  const renderCameraControls = cameraId => {\n    const {\n      isPreviewActive,\n      isStreaming,\n      showModalSettings,\n      isSwitchActive,\n      formValues,\n      comment,\n      isVirtual,\n      fps,\n      rxSpeed\n    } = cameras[cameraId];\n    const handleModalToggle = () => setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        showModalSettings: !prevCameras[cameraId].showModalSettings\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"me-3 fs-4 fw-bold\",\n        style: {\n          color: !isSwitchActive ? 'gray' : 'inherit'\n        },\n        children: [\"Cam \", cameraId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check form-switch fs-5\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          role: \"switch\",\n          disabled: !isSwitchActive,\n          checked: isPreviewActive,\n          onChange: () => handlePreviewToggle(cameraId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          marginLeft: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleModalToggle,\n            disabled: !isPreviewActive || !isSwitchActive || isStreaming,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCog\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleStreamToggle(cameraId),\n            disabled: !isPreviewActive || !isSwitchActive,\n            style: {\n              backgroundColor: isStreaming ? 'orange' : ''\n            },\n            children: isStreaming ? 'Stop Stream' : 'Start Stream'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), isStreaming && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          marginLeft: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"FPS: \", fps.toFixed(2), \" | Rx Speed: \", (rxSpeed / 1024).toFixed(2), \" Mb/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this)]\n    }, cameraId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCameraModal = cameraId => {\n    const {\n      showModalSettings,\n      formValues,\n      comment,\n      isVirtual\n    } = cameras[cameraId];\n    const handleCloseModal = () => setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        showModalSettings: false\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModalSettings,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Cam Server \", cameraId, \" Configuration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Camera ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"camId\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.camId,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this), allCameras.map((camera, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: camera.camera_id,\n                children: camera.camera_id\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this), isVirtual && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Folder Path\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"folderPath\",\n              placeholder: \"Enter folder path\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.folderPath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Target Streaming FPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"targetFPS\",\n              type: \"number\",\n              placeholder: \"Enter FPS\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.targetFPS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Exposure Time (ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"exposureTime\",\n              type: \"number\",\n              step: \"0.01\",\n              placeholder: \"Enter exposure time in ms\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.exposureTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"gain\",\n              type: \"number\",\n              step: \"0.01\",\n              placeholder: \"Enter gain\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.gain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"imageFormat\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.imageFormat,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"compressed\",\n                children: \"Compressed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"original\",\n                children: \"Original\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, cameraId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row justify-content-between\",\n      children: [1, 2].map(cameraId => renderCameraControls(cameraId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        width: '100%',\n        height: '100%',\n        marginTop: '20px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n        placeItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[1],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1,\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[2],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 0.3,\n          zIndex: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasTrackRef,\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 0.3,\n          zIndex: 2,\n          backgroundColor: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasHologramRef,\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 0.3,\n          zIndex: 2,\n          backgroundColor: 'green'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), [1, 2].map(cameraId => renderCameraModal(cameraId)), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 483,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraPreview, \"qxqwu8GG4GTbmobapk294prN23M=\");\n_c = CameraPreview;\nexport default CameraPreview;\nvar _c;\n$RefreshReg$(_c, \"CameraPreview\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Button","Form","FontAwesomeIcon","faCog","ToastContainer","toast","Slide","axios","jsxDEV","_jsxDEV","mainServerURL","camServerURLs","CameraPreview","_s","allCameras","setAllCameras","canvasTrackRef","canvasHologramRef","canvasRefs","cameras","setCameras","isPreviewActive","isStreaming","showModalSettings","isSwitchActive","formValues","camId","folderPath","targetFPS","imageFormat","exposureTime","gain","comment","isVirtual","fps","rxSpeed","isFirstImageReceived","canvasWidth","canvasHeight","maxWidth","fetchCameraDetails","response","get","data","error","showToast","message","handleInputChange","event","cameraId","prevCameras","target","name","value","canvas","current","context","getContext","beginPath","arc","Math","PI","stroke","updateCameraComment","selectedCamera","find","camera","camera_id","details","is_real","msg","type","delay","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","handlePreviewToggle","action","toastId","loading","endpoint","baseURL","update","render","success","isLoading","toLowerCase","handleStreamToggle","exposure_time","image_format","post","webSocketConnections","connectToWebSocket","frameCount","dataCount","firstImageReceived","ip","replace","websocket","WebSocket","binaryType","updateFpsAndSpeed","console","log","copyFrameCount","copyDataCount","intervalId","setInterval","img","Image","onload","ctx","scaleFactor","width","height","drawImage","URL","revokeObjectURL","src","onmessage","url","createObjectURL","size","onopen","onerror","onclose","clearInterval","Object","values","forEach","ws","close","renderCameraControls","handleModalToggle","className","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","role","disabled","checked","onChange","marginLeft","variant","onClick","icon","backgroundColor","toFixed","renderCameraModal","handleCloseModal","show","onHide","Header","closeButton","Title","Body","Group","Label","Select","e","map","index","Text","Control","placeholder","step","display","marginTop","justifyContent","alignItems","placeItems","ref","gridArea","opacity","zIndex","_c","$RefreshReg$"],"sources":["F:/tweezerui/src/components/CameraPreview/CameraPreview.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Slide } from 'react-toastify';\r\nimport axios from 'axios';\r\n\r\nconst mainServerURL = \"http://10.0.63.153:4000/\";\r\nconst camServerURLs = {\r\n  1: \"http://10.0.63.153:4001\",\r\n  2: \"http://10.0.63.153:4002\"\r\n};\r\n\r\nfunction CameraPreview() {\r\n  const [allCameras, setAllCameras] = useState([]);\r\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\r\n  const canvasTrackRef = useRef(null);\r\n  const canvasHologramRef = useRef(null);\r\n\r\n  const canvasRefs = {\r\n    1: useRef(null),\r\n    2: useRef(null),\r\n  };\r\n\r\n\r\n\r\n  const [cameras, setCameras] = useState({\r\n    1: {\r\n      isPreviewActive: false,\r\n      isStreaming: false,\r\n      showModalSettings: false,\r\n      isSwitchActive: true,\r\n      formValues: {\r\n        camId: 'Select Option',\r\n        folderPath: 'F:/',\r\n        targetFPS: '10',\r\n        imageFormat: '',\r\n        exposureTime: \"10.0\",\r\n        gain: \"1.0\",\r\n      },\r\n      comment: \"Select the camera ID from the dropdown list\",\r\n      isVirtual: false,\r\n      fps: 0,\r\n      rxSpeed: 0.0,\r\n      isFirstImageReceived: false,\r\n      canvasWidth: -1,\r\n      canvasHeight: -1,\r\n    },\r\n    2: {\r\n      isPreviewActive: false,\r\n      isStreaming: false,\r\n      showModalSettings: false,\r\n      isSwitchActive: true,\r\n      formValues: {\r\n        camId: 'Select Option',\r\n        folderPath: 'F:/',\r\n        targetFPS: '10',\r\n        imageFormat: '',\r\n        exposureTime: \"10.0\",\r\n        gain: \"1.0\",\r\n      },\r\n      comment: \"Select the camera ID from the dropdown list\",\r\n      isVirtual: false,\r\n      fps: 0,\r\n      rxSpeed: 0.0,\r\n      isFirstImageReceived: false,\r\n      canvasWidth: -1,\r\n      canvasHeight: -1,\r\n    }\r\n  });\r\n\r\n  let maxWidth = 1000;\r\n\r\n  useEffect(() => {\r\n    const fetchCameraDetails = async () => {\r\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\r\n        try {\r\n          const response = await axios.get(camServerURLs[1] + \"/get_all_camera_details\");\r\n          setAllCameras(response.data.data);\r\n        } catch (error) {\r\n          showToast(\"Error in fetching camera details\", \"error\");\r\n          showToast(error.message, \"error\");\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCameraDetails();\r\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\r\n\r\n\r\n  // useEffect(() => {\r\n  //   Object.values(canvasRefs).forEach((canvasRef, cameraId) => {\r\n  //     if (canvasRef.current) {\r\n  //       setCanvasSize(prevCanvasSize => ({\r\n  //         ...prevCanvasSize,\r\n  //         [cameraId]: {\r\n  //           width: canvasRef.current.offsetWidth,\r\n  //           height: canvasRef.current.offsetHeight,\r\n\r\n  //         }\r\n  //       }));\r\n  //     }\r\n  //   });\r\n  // }, []);\r\n\r\n  const handleInputChange = (event, cameraId) => {\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        formValues: {\r\n          ...prevCameras[cameraId].formValues,\r\n          [event.target.name]: event.target.value,\r\n        },\r\n      }\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasHologramRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // Draw a hollow circle at x =100, y = 50\r\n    context.beginPath();\r\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\r\n    context.stroke();\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCameraComment = (cameraId) => {\r\n      const selectedCamera = allCameras.find((camera) => camera.camera_id === cameras[cameraId].formValues.camId);\r\n      if (!selectedCamera) return;\r\n\r\n      const isVirtual = !selectedCamera.details.is_real;\r\n      let comment = selectedCamera.details.comment;\r\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          comment: comment,\r\n          isVirtual: isVirtual,\r\n        }\r\n      }));\r\n    };\r\n\r\n    updateCameraComment(1);\r\n    updateCameraComment(2);\r\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\r\n\r\n  const showToast = (msg, type, delay = 2000) => {\r\n    toast[type](msg, {\r\n      position: \"bottom-right\",\r\n      autoClose: delay,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n  };\r\n\r\n  const handlePreviewToggle = async (cameraId) => {\r\n    const isPreviewActive = cameras[cameraId].isPreviewActive;\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        isSwitchActive: false,\r\n      }\r\n    }));\r\n\r\n    const action = isPreviewActive ? 'Shutting down' : 'Warming up';\r\n    let toastId = toast.loading(`${action} Cam ${cameraId} Server`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n\r\n    try {\r\n      const endpoint = isPreviewActive ? 'stop_camera/' : `warmup/camserver/${cameraId}`;\r\n      const baseURL = isPreviewActive ? camServerURLs[cameraId] : mainServerURL; // Use main server for warming up\r\n      const response = await axios[isPreviewActive ? 'post' : 'get'](baseURL + endpoint);\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n          isPreviewActive: !isPreviewActive,\r\n          isStreaming: isPreviewActive ? false : prevCameras[cameraId].isStreaming,\r\n        }\r\n      }));\r\n\r\n      toast.update(toastId, {\r\n        render: response.data.msg,\r\n        type: response.data.success ? \"success\" : \"error\",\r\n        isLoading: false,\r\n        autoClose: 2000,\r\n      });\r\n    } catch (error) {\r\n      showToast(`Error in ${action.toLowerCase()} Cam Server ${cameraId}`, \"error\");\r\n      showToast(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleStreamToggle = async (cameraId) => {\r\n    const isStreaming = cameras[cameraId].isStreaming;\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        isSwitchActive: false,\r\n      }\r\n    }));\r\n\r\n    const action = isStreaming ? 'Stopping' : 'Starting';\r\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n\r\n    try {\r\n      const endpoint = isStreaming ? 'stop_camera/' : 'start_camera/';\r\n      const data = isStreaming ? {} : {\r\n        camera_id: cameras[cameraId].formValues.camId,\r\n        fps: cameras[cameraId].formValues.targetFPS,\r\n        exposure_time: cameras[cameraId].formValues.exposureTime,\r\n        gain: cameras[cameraId].formValues.gain,\r\n        image_format: cameras[cameraId].formValues.imageFormat,\r\n      };\r\n\r\n      const response = await axios.post(camServerURLs[cameraId] + `/${endpoint}`, data);\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n          isStreaming: !isStreaming,\r\n        }\r\n      }));\r\n\r\n      toast.update(toastId, {\r\n        render: response.data.msg,\r\n        type: response.data.success ? \"success\" : \"error\",\r\n        isLoading: false,\r\n        autoClose: 2000,\r\n      });\r\n    } catch (error) {\r\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\r\n      showToast(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const webSocketConnections = {}; // Store WebSocket connections\r\n\r\n    const connectToWebSocket = (cameraId) => {\r\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\r\n\r\n      let frameCount = 0;\r\n      let dataCount = 0;\r\n      let firstImageReceived = false;\r\n\r\n      const ip = camServerURLs[cameraId].replace(/(^\\w+:|^)\\/\\//, '');\r\n      const websocket = new WebSocket(\"ws://\" + ip + \"/ws\");\r\n      webSocketConnections[cameraId] = websocket; // Store the connection\r\n      websocket.binaryType = 'blob';\r\n\r\n      const updateFpsAndSpeed = () => {\r\n        console.log(frameCount, cameraId)\r\n\r\n        // set the fps and speed for the camera\r\n        const copyFrameCount = frameCount;\r\n        const copyDataCount = dataCount;\r\n\r\n\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            fps: copyFrameCount,\r\n            rxSpeed: copyDataCount / 1024,\r\n          }\r\n        }));\r\n\r\n        frameCount = 0;\r\n        dataCount = 0;\r\n      };\r\n\r\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\r\n\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = canvasRefs[cameraId].current;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!firstImageReceived) {\r\n\r\n          \r\n          // now apply the rule that max width is 1000\r\n          const scaleFactor = maxWidth / img.width;\r\n          canvas.width = img.width * scaleFactor;\r\n          canvas.height = img.height * scaleFactor;\r\n\r\n\r\n          firstImageReceived = true;\r\n\r\n\r\n        }\r\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\r\n        URL.revokeObjectURL(img.src);\r\n      };\r\n\r\n      websocket.onmessage = (event) => {\r\n        const url = URL.createObjectURL(event.data);\r\n        img.src = url;\r\n        frameCount++;\r\n        dataCount += event.data.size;\r\n      };\r\n\r\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\r\n      websocket.onerror = (error) => console.error('WebSocket error:', error);\r\n      websocket.onclose = () => {\r\n        console.log(`Disconnected from Cam Server ${cameraId}`);\r\n        clearInterval(intervalId);\r\n        delete webSocketConnections[cameraId]; // Remove connection from the object\r\n      };\r\n    };\r\n\r\n    connectToWebSocket(1);\r\n    connectToWebSocket(2);\r\n\r\n    // Clean up WebSocket connections when component unmounts\r\n    return () => {\r\n      Object.values(webSocketConnections).forEach(ws => ws.close());\r\n    };\r\n\r\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\r\n\r\n  const renderCameraControls = (cameraId) => {\r\n    const { isPreviewActive, isStreaming, showModalSettings, isSwitchActive, formValues, comment, isVirtual, fps, rxSpeed } = cameras[cameraId];\r\n    const handleModalToggle = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: !prevCameras[cameraId].showModalSettings,\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-center justify-content-center align-items-center\" key={cameraId}>\r\n        <span className=\"me-3 fs-4 fw-bold\" style={{ color: !isSwitchActive ? 'gray' : 'inherit' }}>\r\n          Cam {cameraId}\r\n        </span>\r\n\r\n        <div className=\"form-check form-switch fs-5\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            disabled={!isSwitchActive}\r\n            checked={isPreviewActive}\r\n            onChange={() => handlePreviewToggle(cameraId)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n          <div className=\"btn-group\">\r\n            <Button variant=\"primary\" onClick={handleModalToggle} disabled={!isPreviewActive || !isSwitchActive || isStreaming}>\r\n              <FontAwesomeIcon icon={faCog} />\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => handleStreamToggle(cameraId)}\r\n              disabled={!isPreviewActive || !isSwitchActive}\r\n              style={{ backgroundColor: isStreaming ? 'orange' : '' }}\r\n            >\r\n              {isStreaming ? 'Stop Stream' : 'Start Stream'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {isStreaming && (\r\n          <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n            <div>FPS: {fps.toFixed(2)} | Rx Speed: {(rxSpeed / 1024).toFixed(2)} Mb/s</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCameraModal = (cameraId) => {\r\n    const { showModalSettings, formValues, comment, isVirtual } = cameras[cameraId];\r\n    const handleCloseModal = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: false,\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <Modal show={showModalSettings} onHide={handleCloseModal} key={cameraId}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Cam Server {cameraId} Configuration</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Camera ID</Form.Label>\r\n              <Form.Select name=\"camId\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.camId}>\r\n                <option value=\"\">Select Option</option>\r\n                {allCameras.map((camera, index) => (\r\n                  <option key={index} value={camera.camera_id}>\r\n                    {camera.camera_id}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              <Form.Text className=\"text-muted\">\r\n                {comment}\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {isVirtual && (\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Folder Path</Form.Label>\r\n                <Form.Control name=\"folderPath\" placeholder=\"Enter folder path\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.folderPath} />\r\n              </Form.Group>\r\n            )}\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Target Streaming FPS</Form.Label>\r\n              <Form.Control name=\"targetFPS\" type=\"number\" placeholder=\"Enter FPS\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.targetFPS} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Exposure Time (ms)</Form.Label>\r\n              <Form.Control\r\n                name=\"exposureTime\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter exposure time in ms\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.exposureTime}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Gain</Form.Label>\r\n              <Form.Control\r\n                name=\"gain\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter gain\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.gain}\r\n              />\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Image Format</Form.Label>\r\n              <Form.Select name=\"imageFormat\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.imageFormat}>\r\n                <option value=\"compressed\">Compressed</option>\r\n                <option value=\"original\">Original</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        {[1, 2].map(cameraId => renderCameraControls(cameraId))}\r\n      </div>\r\n\r\n      <div style={{\r\n        display: 'grid',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        placeItems: 'center'\r\n      }}>\r\n        <canvas\r\n          ref={canvasRefs[1]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1,\r\n            zIndex: 1\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRefs[2]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 0.3,\r\n            zIndex: 2\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasTrackRef}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 0.3,\r\n            zIndex: 2,\r\n            backgroundColor: 'red',\r\n\r\n\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasHologramRef}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 0.3,\r\n            zIndex: 2,\r\n            backgroundColor: 'green'\r\n\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {[1, 2].map(cameraId => renderCameraModal(cameraId))}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CameraPreview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}