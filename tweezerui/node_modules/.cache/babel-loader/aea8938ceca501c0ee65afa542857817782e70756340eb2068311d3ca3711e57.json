{"ast":null,"code":"var _jsxFileName = \"F:\\\\TweezerSoftware\\\\tweezerui\\\\src\\\\components\\\\CameraPreview\\\\CameraPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Slide } from 'react-toastify';\nimport axios from 'axios';\nimport { useGlobalContext } from '../../GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst camServerURLs = {\n  1: \"http://10.0.63.153:4001\",\n  2: \"http://10.0.63.153:4002\"\n};\nfunction CameraPreview() {\n  _s();\n  const [allCameras, setAllCameras] = useState([]);\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\n\n  const {\n    canvasRefs,\n    imageProps,\n    setImageProps,\n    drawProps,\n    setDrawProps,\n    serverInfo,\n    cameras,\n    setCameras\n  } = useGlobalContext();\n  let drawing = false;\n  const draw = event => {\n    if (!drawing) return;\n    const canvas = canvasRefs[4].current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect(); // get the position of the canvas\n\n    const x = event.clientX - drawProps.startX;\n    const y = event.clientY - drawProps.startY;\n    ctx.lineWidth = 5;\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'red';\n    ctx.lineTo(x, y);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n  };\n  const startDrawing = event => {\n    drawing = true;\n    draw(event);\n  };\n  const stopDrawing = () => {\n    drawing = false;\n    const canvas = canvasRefs[4].current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n  };\n  useEffect(() => {\n    const canvas = canvasRefs[4].current;\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, []);\n  const [maxWidth, setMaxWidth] = useState(1000);\n  useEffect(() => {\n    // set timeout to send request to /heartbeat of both the servers and it controls the is_preview and is switch active\n    // if the server is not responding, is_preview is false, is_switch_active is true\n\n    const fetchHeartbeat = cameraId => {\n      const baseURL = camServerURLs[cameraId];\n      const endpoint = '/heartbeat';\n      axios.get(baseURL + endpoint).then(response => {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            isPreviewActive: true\n          }\n        }));\n      }).catch(error => {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            isPreviewActive: false\n          }\n        }));\n      });\n    };\n    setInterval(() => {\n      fetchHeartbeat(1);\n      fetchHeartbeat(2);\n    }, 2000);\n\n    // fetch /get/is_stream_active of both the servers\n\n    const fetchIsStreamActive = cameraId => {\n      const baseURL = camServerURLs[cameraId];\n      const endpoint = '/get/is_stream_active';\n      axios.get(baseURL + endpoint).then(response => {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            isStreaming: response.data.data.length > 0\n          }\n        }));\n      }).catch(error => {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            isStreaming: false\n          }\n        }));\n      });\n    };\n    fetchIsStreamActive(1);\n    fetchIsStreamActive(2);\n  }, []);\n  useEffect(() => {\n    const fetchCameraDetails = async () => {\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\n        try {\n          const response = await axios.get(camServerURLs[1] + \"/get_all_camera_details\");\n          throwErrorIfNotSuccess(response, null);\n          setAllCameras(response.data.data);\n        } catch (error) {\n          showToast(\"Error in fetching camera details\", \"error\");\n          showToast(error.message, \"error\");\n        }\n      }\n    };\n    fetchCameraDetails();\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\n  const handleInputChange = (event, cameraId) => {\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        formValues: {\n          ...prevCameras[cameraId].formValues,\n          [event.target.name]: event.target.value\n        }\n      }\n    }));\n  };\n  useEffect(() => {\n    const canvas = canvasRefs[4].current;\n    const context = canvas.getContext('2d');\n\n    // Draw a hollow circle at x =100, y = 50\n    context.beginPath();\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\n    context.stroke();\n  }, []);\n  useEffect(() => {\n    const updateCameraComment = cameraId => {\n      const selectedCamera = allCameras.find(camera => camera.camera_id === cameras[cameraId].formValues.camId);\n      if (!selectedCamera) {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            comment: \"Select a camera\",\n            isVirtual: true\n          }\n        }));\n        return;\n      }\n      ;\n      const isVirtual = !selectedCamera.details.is_real;\n      let comment = selectedCamera.details.comment;\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          comment: comment,\n          isVirtual: isVirtual\n        }\n      }));\n    };\n    updateCameraComment(1);\n    updateCameraComment(2);\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\n  const showToast = (msg, type, delay = 2000) => {\n    toast[type](msg, {\n      position: \"bottom-right\",\n      autoClose: delay,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"dark\",\n      transition: Slide\n    });\n  };\n  const throwErrorIfNotSuccess = (response, toastId) => {\n    const success = response.data.success;\n    // raise error is success is false with response message\n    if (!success) {\n      if (toastId) {\n        toast.update(toastId, {\n          render: response.data.msg,\n          type: \"error\",\n          isLoading: false,\n          autoClose: 1000\n        });\n      }\n      throw new Error(response.data.msg);\n    }\n  };\n  const handleStreamToggle = async cameraId => {\n    // check if min max values are respected\n    const formValues = cameras[cameraId].formValues;\n    let error = false;\n    if (formValues.targetFPS < cameras[cameraId].formValuesMinMax.targetFPS.min || formValues.targetFPS > cameras[cameraId].formValuesMinMax.targetFPS.max) {\n      showToast(`Target FPS must be between ${cameras[cameraId].formValuesMinMax.targetFPS.min} and ${cameras[cameraId].formValuesMinMax.targetFPS.max}`, \"error\");\n      error = true;\n    }\n    if (formValues.exposureTime < cameras[cameraId].formValuesMinMax.exposureTime.min || formValues.exposureTime > cameras[cameraId].formValuesMinMax.exposureTime.max) {\n      showToast(`Exposure Time must be between ${cameras[cameraId].formValuesMinMax.exposureTime.min} and ${cameras[cameraId].formValuesMinMax.exposureTime.max}`, \"error\");\n      error = true;\n    }\n    if (formValues.gain < cameras[cameraId].formValuesMinMax.gain.min || formValues.gain > cameras[cameraId].formValuesMinMax.gain.max) {\n      showToast(`Gain must be between ${cameras[cameraId].formValuesMinMax.gain.min} and ${cameras[cameraId].formValuesMinMax.gain.max}`, \"error\");\n      error = true;\n    }\n    if (error) return;\n    const isStreaming = cameras[cameraId].isStreaming;\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        isSwitchActive: false\n      }\n    }));\n    const action = isStreaming ? 'Stopping' : 'Starting';\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\n      position: \"bottom-center\",\n      autoClose: 2000,\n      theme: \"dark\",\n      transition: Slide\n    });\n    try {\n      const endpoint = isStreaming ? 'stop_camera/' : 'start_camera/';\n      const data = isStreaming ? {} : {\n        camera_id: cameras[cameraId].formValues.camId,\n        fps: cameras[cameraId].formValues.targetFPS,\n        exposure_time: cameras[cameraId].formValues.exposureTime,\n        gain: cameras[cameraId].formValues.gain,\n        image_format: cameras[cameraId].formValues.imageFormat,\n        folder_path: cameras[cameraId].formValues.folderPath,\n        request_locate: cameras[cameraId].formValues.requestLocate\n      };\n      const response = await axios.post(camServerURLs[cameraId] + `/${endpoint}`, data);\n      throwErrorIfNotSuccess(response, toastId);\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true,\n          isStreaming: !isStreaming\n        }\n      }));\n      toast.update(toastId, {\n        render: response.data.msg,\n        type: response.data.success ? \"success\" : \"error\",\n        isLoading: false,\n        autoClose: 2000\n      });\n    } catch (error) {\n      // revert the camera switch to active\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true\n        }\n      }));\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\n      showToast(error.message, \"error\");\n    }\n  };\n  useEffect(() => {\n    const webSocketConnections = {}; // Store WebSocket connections\n\n    const connectToWebSocket = cameraId => {\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\n      let frameCount = 0;\n      let dataCount = 0;\n      let firstImageReceived = false;\n      const ip = camServerURLs[cameraId].replace(/(^\\w+:|^)\\/\\//, '');\n      const websocket = new WebSocket(\"ws://\" + ip + \"/ws\");\n      webSocketConnections[cameraId] = websocket; // Store the connection\n      websocket.binaryType = 'blob';\n      const updateFpsAndSpeed = () => {\n        console.log(frameCount, cameraId);\n\n        // set the fps and speed for the camera\n        const copyFrameCount = frameCount;\n        const copyDataCount = dataCount;\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            fps: copyFrameCount,\n            rxSpeed: copyDataCount / 1024\n          }\n        }));\n        frameCount = 0;\n        dataCount = 0;\n      };\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRefs[cameraId].current;\n        const ctx = canvas.getContext('2d');\n        if (!firstImageReceived) {\n          // now apply the rule that max width is 1000\n          const scaleFactor = maxWidth / img.width;\n          canvas.width = img.width * scaleFactor;\n          canvas.height = img.height * scaleFactor;\n          firstImageReceived = true;\n          setCameras(prevCameras => ({\n            ...prevCameras,\n            [cameraId]: {\n              ...prevCameras[cameraId],\n              isFirstImageReceived: true,\n              canvasWidth: canvas.width,\n              canvasHeight: canvas.height\n            }\n          }));\n          imageProps.width = img.width;\n          imageProps.height = img.height;\n          setImageProps({\n            width: img.width,\n            height: img.height\n          });\n          drawProps.scale = scaleFactor;\n          drawProps.centerX = canvas.width / 2;\n          drawProps.centerY = canvas.height / 2;\n          const rect = canvas.getBoundingClientRect();\n          drawProps.startX = rect.left;\n          drawProps.startY = rect.top;\n          drawProps.endX = rect.right;\n          drawProps.endY = rect.bottom;\n\n          // set the height and width of the other two canvases\n          canvasRefs[3].current.width = canvas.width;\n          canvasRefs[3].current.height = canvas.height;\n          canvasRefs[4].current.width = canvas.width;\n          canvasRefs[4].current.height = canvas.height;\n\n          // since i changed the values manually, i need to update the context by calling setDrawProps\n          // i set the values directly because I want the effect to be instant and not wait for the next render\n          setDrawProps({\n            scale: scaleFactor,\n            centerX: canvas.width / 2,\n            centerY: canvas.height / 2,\n            startX: rect.left,\n            startY: rect.top,\n            endX: rect.right,\n            endY: rect.bottom\n          });\n        }\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n        URL.revokeObjectURL(img.src);\n      };\n      websocket.onmessage = event => {\n        const url = URL.createObjectURL(event.data);\n        img.src = url;\n        frameCount++;\n        dataCount += event.data.size;\n      };\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\n      websocket.onerror = error => console.error('WebSocket error:', error);\n      websocket.onclose = () => {\n        console.log(`Disconnected from Cam Server ${cameraId}`);\n        clearInterval(intervalId);\n        delete webSocketConnections[cameraId]; // Remove connection from the object\n      };\n    };\n    connectToWebSocket(1);\n    connectToWebSocket(2);\n\n    // Clean up WebSocket connections when component unmounts\n    return () => {\n      Object.values(webSocketConnections).forEach(ws => ws.close());\n    };\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\n  const renderCameraControls = cameraId => {\n    const {\n      isPreviewActive,\n      isStreaming,\n      showModalSettings,\n      isSwitchActive,\n      formValues,\n      comment,\n      isVirtual,\n      fps,\n      rxSpeed\n    } = cameras[cameraId];\n    const handleModalToggle = () => setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        showModalSettings: !prevCameras[cameraId].showModalSettings\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-flex align-items-center me-3 fs-4 fw-bold\",\n        style: {\n          color: !isSwitchActive ? 'gray' : 'inherit'\n        },\n        children: [\"Cam \", cameraId, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '10px',\n            width: '10px',\n            backgroundColor: isPreviewActive ? 'green' : 'red',\n            borderRadius: '50%',\n            display: 'inline-block',\n            marginLeft: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          marginLeft: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleModalToggle,\n            disabled: !isPreviewActive || !isSwitchActive || isStreaming,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCog\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleStreamToggle(cameraId),\n            disabled: !isPreviewActive || !isSwitchActive,\n            style: {\n              backgroundColor: isStreaming ? 'orange' : ''\n            },\n            children: isStreaming ? 'Stop Stream' : 'Start Stream'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this), 1 == 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          marginLeft: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"FPS: \", fps.toFixed(2), \" | Rx Speed: \", (rxSpeed / 1024).toFixed(2), \" Mb/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 576,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this)]\n    }, cameraId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCameraModal = cameraId => {\n    const {\n      showModalSettings,\n      formValues,\n      comment,\n      isVirtual,\n      formValuesMinMax\n    } = cameras[cameraId];\n    const handleCloseModal = () => setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        showModalSettings: false\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModalSettings,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Cam Server \", cameraId, \" Configuration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Camera ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 602,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"camId\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.camId,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 604,\n                columnNumber: 17\n              }, this), allCameras.map((camera, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: camera.camera_id,\n                children: camera.camera_id\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 603,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 601,\n            columnNumber: 13\n          }, this), isVirtual && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Folder Path\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"folderPath\",\n              placeholder: \"Enter folder path\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.folderPath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Target Streaming FPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"targetFPS\",\n              type: \"number\",\n              placeholder: \"Enter FPS\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.targetFPS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 15\n            }, this), formValues.targetFPS < formValuesMinMax.targetFPS.min || formValues.targetFPS > formValuesMinMax.targetFPS.max ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: 'red'\n              },\n              children: [\"Value must be between \", formValuesMinMax.targetFPS.min, \" and \", formValuesMinMax.targetFPS.max]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Exposure Time (ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"exposureTime\",\n              type: \"number\",\n              step: \"0.01\",\n              placeholder: \"Enter exposure time in ms\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.exposureTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this), formValues.exposureTime < formValuesMinMax.exposureTime.min || formValues.exposureTime > formValuesMinMax.exposureTime.max ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: 'red'\n              },\n              children: [\"Value must be between \", formValuesMinMax.exposureTime.min, \" and \", formValuesMinMax.exposureTime.max]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 630,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"gain\",\n              type: \"number\",\n              step: \"0.01\",\n              min: \"0\",\n              max: \"100\",\n              placeholder: \"Enter gain\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.gain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 649,\n              columnNumber: 15\n            }, this), formValues.gain < formValuesMinMax.gain.min || formValues.gain > formValuesMinMax.gain.max ? /*#__PURE__*/_jsxDEV(Form.Text, {\n              style: {\n                color: 'red'\n              },\n              children: [\"Value must be between \", formValuesMinMax.gain.min, \" and \", formValuesMinMax.gain.max]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"imageFormat\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.imageFormat,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"compressed\",\n                children: \"Compressed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"original\",\n                children: \"Original\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: cameras[cameraId].canRequestLocate && /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Request Locate\",\n              onChange: e => {\n                setCameras(prevCameras => ({\n                  ...prevCameras,\n                  [cameraId]: {\n                    ...prevCameras[cameraId],\n                    formValues: {\n                      ...prevCameras[cameraId].formValues,\n                      requestLocate: e.target.checked\n                    }\n                  }\n                }));\n              },\n              checked: formValues.requestLocate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 675,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 9\n      }, this)]\n    }, cameraId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row justify-content-between\",\n      children: [1, 2].map(cameraId => renderCameraControls(cameraId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        width: '100%',\n        height: '100%',\n        marginTop: '20px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n        placeItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[1],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 1,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[2],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 0.5,\n          zIndex: 2,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[3],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 3,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[4],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 4,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 721,\n      columnNumber: 7\n    }, this), [1, 2].map(cameraId => renderCameraModal(cameraId)), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 776,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 706,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraPreview, \"HneDXYceS1oyODaaLAY/ErpuKmw=\", false, function () {\n  return [useGlobalContext];\n});\n_c = CameraPreview;\nexport default CameraPreview;\nvar _c;\n$RefreshReg$(_c, \"CameraPreview\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Button","Form","FontAwesomeIcon","faCog","ToastContainer","toast","Slide","axios","useGlobalContext","jsxDEV","_jsxDEV","camServerURLs","CameraPreview","_s","allCameras","setAllCameras","canvasRefs","imageProps","setImageProps","drawProps","setDrawProps","serverInfo","cameras","setCameras","drawing","draw","event","canvas","current","ctx","getContext","rect","getBoundingClientRect","x","clientX","startX","y","clientY","startY","lineWidth","lineCap","strokeStyle","lineTo","stroke","beginPath","moveTo","startDrawing","stopDrawing","addEventListener","removeEventListener","maxWidth","setMaxWidth","fetchHeartbeat","cameraId","baseURL","endpoint","get","then","response","prevCameras","isPreviewActive","catch","error","setInterval","fetchIsStreamActive","isStreaming","data","length","fetchCameraDetails","showModalSettings","throwErrorIfNotSuccess","showToast","message","handleInputChange","formValues","target","name","value","context","arc","Math","PI","updateCameraComment","selectedCamera","find","camera","camera_id","camId","comment","isVirtual","details","is_real","msg","type","delay","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","toastId","success","update","render","isLoading","Error","handleStreamToggle","targetFPS","formValuesMinMax","min","max","exposureTime","gain","isSwitchActive","action","loading","fps","exposure_time","image_format","imageFormat","folder_path","folderPath","request_locate","requestLocate","post","toLowerCase","webSocketConnections","connectToWebSocket","frameCount","dataCount","firstImageReceived","ip","replace","websocket","WebSocket","binaryType","updateFpsAndSpeed","console","log","copyFrameCount","copyDataCount","rxSpeed","intervalId","img","Image","onload","scaleFactor","width","height","isFirstImageReceived","canvasWidth","canvasHeight","scale","centerX","centerY","left","top","endX","right","endY","bottom","drawImage","URL","revokeObjectURL","src","onmessage","url","createObjectURL","size","onopen","onerror","onclose","clearInterval","Object","values","forEach","ws","close","renderCameraControls","handleModalToggle","className","children","style","color","backgroundColor","borderRadius","display","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","disabled","icon","toFixed","renderCameraModal","handleCloseModal","show","onHide","Header","closeButton","Title","Body","Group","Label","Select","onChange","e","map","index","Text","Control","placeholder","step","canRequestLocate","Check","label","checked","marginTop","justifyContent","alignItems","placeItems","ref","gridArea","opacity","zIndex","_c","$RefreshReg$"],"sources":["F:/TweezerSoftware/tweezerui/src/components/CameraPreview/CameraPreview.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Slide } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useGlobalContext } from '../../GlobalContext';\r\n\r\n\r\nconst camServerURLs = {\r\n  1: \"http://10.0.63.153:4001\",\r\n  2: \"http://10.0.63.153:4002\"\r\n};\r\n\r\nfunction CameraPreview() {\r\n  const [allCameras, setAllCameras] = useState([]);\r\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\r\n\r\n\r\n  const { canvasRefs, imageProps, setImageProps, drawProps, setDrawProps, serverInfo, cameras, setCameras } = useGlobalContext();\r\n\r\n  let drawing = false;\r\n\r\n  const draw = (event) => {\r\n    if (!drawing) return;\r\n    const canvas = canvasRefs[4].current;\r\n    const ctx = canvas.getContext('2d');\r\n    const rect = canvas.getBoundingClientRect(); // get the position of the canvas\r\n\r\n    const x = event.clientX - drawProps.startX;\r\n    const y = event.clientY - drawProps.startY;\r\n\r\n    ctx.lineWidth = 5;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = 'red';\r\n\r\n    ctx.lineTo(x, y);\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n  };\r\n\r\n  const startDrawing = (event) => {\r\n    drawing = true;\r\n    draw(event);\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    drawing = false;\r\n    const canvas = canvasRefs[4].current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.beginPath();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRefs[4].current;\r\n    canvas.addEventListener('mousedown', startDrawing);\r\n    canvas.addEventListener('mousemove', draw);\r\n    canvas.addEventListener('mouseup', stopDrawing);\r\n    canvas.addEventListener('mouseout', stopDrawing);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', startDrawing);\r\n      canvas.removeEventListener('mousemove', draw);\r\n      canvas.removeEventListener('mouseup', stopDrawing);\r\n      canvas.removeEventListener('mouseout', stopDrawing);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  const [maxWidth, setMaxWidth] = useState(1000);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // set timeout to send request to /heartbeat of both the servers and it controls the is_preview and is switch active\r\n    // if the server is not responding, is_preview is false, is_switch_active is true\r\n\r\n\r\n\r\n    const fetchHeartbeat = (cameraId) => {\r\n\r\n\r\n      const baseURL = camServerURLs[cameraId];\r\n      const endpoint = '/heartbeat';\r\n\r\n\r\n      axios.get(baseURL + endpoint)\r\n        .then((response) => {\r\n\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isPreviewActive: true\r\n            }\r\n          }));\r\n\r\n        })\r\n        .catch((error) => {\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isPreviewActive: false\r\n            }\r\n          }));\r\n\r\n\r\n        });\r\n    };\r\n\r\n    setInterval(() => {\r\n      fetchHeartbeat(1);\r\n      fetchHeartbeat(2);\r\n    }, 2000);\r\n\r\n    // fetch /get/is_stream_active of both the servers\r\n\r\n    const fetchIsStreamActive = (cameraId) => {\r\n      const baseURL = camServerURLs[cameraId];\r\n      const endpoint = '/get/is_stream_active';\r\n\r\n      axios.get(baseURL + endpoint)\r\n        .then((response) => {\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isStreaming: response.data.data.length > 0\r\n            }\r\n          }));\r\n\r\n        })\r\n        .catch((error) => {\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isStreaming: false\r\n            }\r\n          }));\r\n\r\n        });\r\n    };\r\n\r\n    fetchIsStreamActive(1);\r\n    fetchIsStreamActive(2);\r\n\r\n\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    const fetchCameraDetails = async () => {\r\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\r\n        try {\r\n          const response = await axios.get(camServerURLs[1] + \"/get_all_camera_details\");\r\n          throwErrorIfNotSuccess(response, null);\r\n\r\n\r\n          setAllCameras(response.data.data);\r\n        } catch (error) {\r\n          showToast(\"Error in fetching camera details\", \"error\");\r\n          showToast(error.message, \"error\");\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCameraDetails();\r\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\r\n\r\n\r\n\r\n  const handleInputChange = (event, cameraId) => {\r\n\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        formValues: {\r\n          ...prevCameras[cameraId].formValues,\r\n          [event.target.name]: event.target.value,\r\n        },\r\n      }\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRefs[4].current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // Draw a hollow circle at x =100, y = 50\r\n    context.beginPath();\r\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\r\n    context.stroke();\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCameraComment = (cameraId) => {\r\n      const selectedCamera = allCameras.find((camera) => camera.camera_id === cameras[cameraId].formValues.camId);\r\n      if (!selectedCamera) {\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            comment: \"Select a camera\",\r\n            isVirtual: true,\r\n          }\r\n        }));\r\n\r\n        return\r\n      };\r\n\r\n      const isVirtual = !selectedCamera.details.is_real;\r\n      let comment = selectedCamera.details.comment;\r\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          comment: comment,\r\n          isVirtual: isVirtual,\r\n        }\r\n      }));\r\n    };\r\n\r\n    updateCameraComment(1);\r\n    updateCameraComment(2);\r\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\r\n\r\n  const showToast = (msg, type, delay = 2000) => {\r\n    toast[type](msg, {\r\n      position: \"bottom-right\",\r\n      autoClose: delay,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n  };\r\n\r\n  const throwErrorIfNotSuccess = (response, toastId) => {\r\n\r\n    const success = response.data.success;\r\n    // raise error is success is false with response message\r\n    if (!success) {\r\n\r\n\r\n      if (toastId) {\r\n        toast.update(toastId, {\r\n          render: response.data.msg,\r\n          type: \"error\",\r\n          isLoading: false,\r\n          autoClose: 1000,\r\n        });\r\n      }\r\n      throw new Error(response.data.msg);\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  const handleStreamToggle = async (cameraId) => {\r\n\r\n\r\n    // check if min max values are respected\r\n    const formValues = cameras[cameraId].formValues;\r\n\r\n    let error = false;\r\n\r\n    if (formValues.targetFPS < cameras[cameraId].formValuesMinMax.targetFPS.min || formValues.targetFPS > cameras[cameraId].formValuesMinMax.targetFPS.max) {\r\n      showToast(`Target FPS must be between ${cameras[cameraId].formValuesMinMax.targetFPS.min} and ${cameras[cameraId].formValuesMinMax.targetFPS.max}`, \"error\");\r\n      error = true;\r\n    }\r\n\r\n    if (formValues.exposureTime < cameras[cameraId].formValuesMinMax.exposureTime.min || formValues.exposureTime > cameras[cameraId].formValuesMinMax.exposureTime.max) {\r\n      showToast(`Exposure Time must be between ${cameras[cameraId].formValuesMinMax.exposureTime.min} and ${cameras[cameraId].formValuesMinMax.exposureTime.max}`, \"error\");\r\n      error = true;\r\n\r\n    }\r\n\r\n    if (formValues.gain < cameras[cameraId].formValuesMinMax.gain.min || formValues.gain > cameras[cameraId].formValuesMinMax.gain.max) {\r\n      showToast(`Gain must be between ${cameras[cameraId].formValuesMinMax.gain.min} and ${cameras[cameraId].formValuesMinMax.gain.max}`, \"error\");\r\n      error = true;\r\n    }\r\n\r\n    if (error) return;\r\n\r\n\r\n\r\n\r\n    const isStreaming = cameras[cameraId].isStreaming;\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        isSwitchActive: false,\r\n      }\r\n    }));\r\n\r\n    const action = isStreaming ? 'Stopping' : 'Starting';\r\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\r\n      position: \"bottom-center\",\r\n      autoClose: 2000,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n\r\n    try {\r\n      const endpoint = isStreaming ? 'stop_camera/' : 'start_camera/';\r\n      const data = isStreaming ? {} : {\r\n        camera_id: cameras[cameraId].formValues.camId,\r\n        fps: cameras[cameraId].formValues.targetFPS,\r\n        exposure_time: cameras[cameraId].formValues.exposureTime,\r\n        gain: cameras[cameraId].formValues.gain,\r\n        image_format: cameras[cameraId].formValues.imageFormat,\r\n        folder_path: cameras[cameraId].formValues.folderPath,\r\n        request_locate: cameras[cameraId].formValues.requestLocate\r\n      };\r\n\r\n      const response = await axios.post(camServerURLs[cameraId] + `/${endpoint}`, data);\r\n\r\n      throwErrorIfNotSuccess(response, toastId);\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n          isStreaming: !isStreaming,\r\n        }\r\n      }));\r\n\r\n      toast.update(toastId, {\r\n        render: response.data.msg,\r\n        type: response.data.success ? \"success\" : \"error\",\r\n        isLoading: false,\r\n        autoClose: 2000,\r\n      });\r\n    } catch (error) {\r\n\r\n      // revert the camera switch to active\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n        }\r\n      }));\r\n\r\n\r\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\r\n      showToast(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n\r\n    const webSocketConnections = {}; // Store WebSocket connections\r\n\r\n    const connectToWebSocket = (cameraId) => {\r\n\r\n\r\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\r\n\r\n      let frameCount = 0;\r\n      let dataCount = 0;\r\n      let firstImageReceived = false;\r\n\r\n      const ip = camServerURLs[cameraId].replace(/(^\\w+:|^)\\/\\//, '');\r\n      const websocket = new WebSocket(\"ws://\" + ip + \"/ws\");\r\n      webSocketConnections[cameraId] = websocket; // Store the connection\r\n      websocket.binaryType = 'blob';\r\n\r\n      const updateFpsAndSpeed = () => {\r\n        console.log(frameCount, cameraId)\r\n\r\n        // set the fps and speed for the camera\r\n        const copyFrameCount = frameCount;\r\n        const copyDataCount = dataCount;\r\n\r\n\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            fps: copyFrameCount,\r\n            rxSpeed: copyDataCount / 1024,\r\n          }\r\n        }));\r\n\r\n        frameCount = 0;\r\n        dataCount = 0;\r\n      };\r\n\r\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\r\n\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = canvasRefs[cameraId].current;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!firstImageReceived) {\r\n\r\n\r\n          // now apply the rule that max width is 1000\r\n          const scaleFactor = maxWidth / img.width;\r\n          canvas.width = img.width * scaleFactor;\r\n          canvas.height = img.height * scaleFactor;\r\n          firstImageReceived = true;\r\n\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isFirstImageReceived: true,\r\n              canvasWidth: canvas.width,\r\n              canvasHeight: canvas.height,\r\n            }\r\n\r\n          }));\r\n\r\n\r\n\r\n          imageProps.width = img.width;\r\n          imageProps.height = img.height;\r\n\r\n          setImageProps({\r\n            width: img.width,\r\n            height: img.height\r\n          });\r\n\r\n          drawProps.scale = scaleFactor;\r\n          drawProps.centerX = canvas.width / 2;\r\n          drawProps.centerY = canvas.height / 2;\r\n\r\n          const rect = canvas.getBoundingClientRect();\r\n          drawProps.startX = rect.left;\r\n          drawProps.startY = rect.top;\r\n          drawProps.endX = rect.right;\r\n          drawProps.endY = rect.bottom;\r\n\r\n\r\n          // set the height and width of the other two canvases\r\n          canvasRefs[3].current.width = canvas.width;\r\n          canvasRefs[3].current.height = canvas.height;\r\n          canvasRefs[4].current.width = canvas.width;\r\n          canvasRefs[4].current.height = canvas.height;\r\n\r\n          // since i changed the values manually, i need to update the context by calling setDrawProps\r\n          // i set the values directly because I want the effect to be instant and not wait for the next render\r\n          setDrawProps({\r\n            scale: scaleFactor,\r\n            centerX: canvas.width / 2,\r\n            centerY: canvas.height / 2,\r\n            startX: rect.left,\r\n            startY: rect.top,\r\n            endX: rect.right,\r\n            endY: rect.bottom\r\n          });\r\n\r\n\r\n\r\n\r\n        }\r\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\r\n        URL.revokeObjectURL(img.src);\r\n      };\r\n\r\n      websocket.onmessage = (event) => {\r\n\r\n        const url = URL.createObjectURL(event.data);\r\n        img.src = url;\r\n        frameCount++;\r\n        dataCount += event.data.size;\r\n      };\r\n\r\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\r\n      websocket.onerror = (error) => console.error('WebSocket error:', error);\r\n      websocket.onclose = () => {\r\n        console.log(`Disconnected from Cam Server ${cameraId}`);\r\n        clearInterval(intervalId);\r\n        delete webSocketConnections[cameraId]; // Remove connection from the object\r\n      };\r\n    };\r\n\r\n    connectToWebSocket(1);\r\n    connectToWebSocket(2);\r\n\r\n    // Clean up WebSocket connections when component unmounts\r\n    return () => {\r\n      Object.values(webSocketConnections).forEach(ws => ws.close());\r\n    };\r\n\r\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\r\n\r\n\r\n  const renderCameraControls = (cameraId) => {\r\n\r\n    const { isPreviewActive, isStreaming, showModalSettings, isSwitchActive, formValues, comment, isVirtual, fps, rxSpeed } = cameras[cameraId];\r\n    const handleModalToggle = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: !prevCameras[cameraId].showModalSettings,\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-center justify-content-center align-items-center\" key={cameraId}>\r\n\r\n\r\n        <span className=\"d-flex align-items-center me-3 fs-4 fw-bold\" style={{ color: !isSwitchActive ? 'gray' : 'inherit' }}>\r\n          Cam {cameraId}\r\n          <div style={{\r\n            height: '10px',\r\n            width: '10px',\r\n            backgroundColor: isPreviewActive ? 'green' : 'red',\r\n            borderRadius: '50%',\r\n            display: 'inline-block',\r\n            marginLeft: '5px'\r\n          }}></div>\r\n        </span>\r\n\r\n\r\n\r\n        {/* <div className=\"form-check form-switch fs-5\">\r\n        //   <input\r\n        //     className=\"form-check-input\"\r\n        //     type=\"checkbox\"\r\n        //     role=\"switch\"\r\n        //     disabled={!isSwitchActive}\r\n        //     checked={isPreviewActive}\r\n        //     onChange={() => handlePreviewToggle(cameraId)}\r\n        //   />\r\n        // </div> */}\r\n\r\n        <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n          <div className=\"btn-group\">\r\n            <Button variant=\"primary\" onClick={handleModalToggle} disabled={!isPreviewActive || !isSwitchActive || isStreaming}>\r\n              <FontAwesomeIcon icon={faCog} />\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => handleStreamToggle(cameraId)}\r\n              disabled={!isPreviewActive || !isSwitchActive}\r\n              style={{ backgroundColor: isStreaming ? 'orange' : '' }}\r\n            >\r\n              {isStreaming ? 'Stop Stream' : 'Start Stream'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {1 == 1 && (\r\n          <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n            <div>FPS: {fps.toFixed(2)} | Rx Speed: {(rxSpeed / 1024).toFixed(2)} Mb/s</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCameraModal = (cameraId) => {\r\n    const { showModalSettings, formValues, comment, isVirtual, formValuesMinMax } = cameras[cameraId];\r\n    const handleCloseModal = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: false,\r\n      }\r\n    }));\r\n\r\n    return (\r\n\r\n      <Modal show={showModalSettings} onHide={handleCloseModal} key={cameraId}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Cam Server {cameraId} Configuration</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Camera ID</Form.Label>\r\n              <Form.Select name=\"camId\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.camId}>\r\n                <option value=\"\">Select Option</option>\r\n                {allCameras.map((camera, index) => (\r\n                  <option key={index} value={camera.camera_id}>\r\n                    {camera.camera_id}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              <Form.Text className=\"text-muted\">\r\n                {comment}\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {isVirtual && (\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Folder Path</Form.Label>\r\n                <Form.Control name=\"folderPath\" placeholder=\"Enter folder path\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.folderPath} />\r\n              </Form.Group>\r\n            )}\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Target Streaming FPS</Form.Label>\r\n              <Form.Control name=\"targetFPS\" type=\"number\" placeholder=\"Enter FPS\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.targetFPS} />\r\n              {formValues.targetFPS < formValuesMinMax.targetFPS.min || formValues.targetFPS > formValuesMinMax.targetFPS.max ? (\r\n                <Form.Text style={{ color: 'red' }}>\r\n                  Value must be between {formValuesMinMax.targetFPS.min} and {formValuesMinMax.targetFPS.max}\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Exposure Time (ms)</Form.Label>\r\n              <Form.Control\r\n                name=\"exposureTime\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter exposure time in ms\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.exposureTime}\r\n              />\r\n              {formValues.exposureTime < formValuesMinMax.exposureTime.min || formValues.exposureTime > formValuesMinMax.exposureTime.max ? (\r\n                <Form.Text style={{ color: 'red' }}>\r\n                  Value must be between {formValuesMinMax.exposureTime.min} and {formValuesMinMax.exposureTime.max}\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Gain</Form.Label>\r\n              <Form.Control\r\n                name=\"gain\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                placeholder=\"Enter gain\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.gain}\r\n              />\r\n              {formValues.gain < formValuesMinMax.gain.min || formValues.gain > formValuesMinMax.gain.max ? (\r\n                <Form.Text style={{ color: 'red' }}>\r\n                  Value must be between {formValuesMinMax.gain.min} and {formValuesMinMax.gain.max}\r\n                </Form.Text>\r\n              ) : null}\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Image Format</Form.Label>\r\n              <Form.Select name=\"imageFormat\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.imageFormat}>\r\n                <option value=\"compressed\">Compressed</option>\r\n                <option value=\"original\">Original</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              {cameras[cameraId].canRequestLocate && (\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Request Locate\"\r\n                  onChange={(e) => {\r\n                    setCameras(prevCameras => ({\r\n                      ...prevCameras,\r\n                      [cameraId]: {\r\n                        ...prevCameras[cameraId],\r\n                        formValues: {\r\n                          ...prevCameras[cameraId].formValues,\r\n                          requestLocate: e.target.checked\r\n                        }\r\n                      }\r\n                    }));\r\n                  }}\r\n                  checked={formValues.requestLocate}\r\n                />\r\n              )}\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        {[1, 2].map(cameraId => renderCameraControls(cameraId))}\r\n      </div>\r\n      {/* <div className=\"mt-3\">\r\n        <Form.Range \r\n          min={500} \r\n          max={5000} \r\n          step={100} \r\n          value={maxWidth} \r\n        \r\n        />\r\n        <span className=\"ms-2\">Zoom:</span>\r\n      </div> */}\r\n\r\n      <div style={{\r\n        display: 'grid',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        placeItems: 'center'\r\n      }}>\r\n        <canvas\r\n          ref={canvasRefs[1]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 1,\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRefs[2]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 0.5,\r\n            zIndex: 2,\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRefs[3]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 3,\r\n            backgroundColor: 'transparent',\r\n\r\n\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasRefs[4]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 4,\r\n            backgroundColor: 'transparent'\r\n\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {[1, 2].map(cameraId => renderCameraModal(cameraId))}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CameraPreview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}