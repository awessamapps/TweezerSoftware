{"ast":null,"code":"var _jsxFileName = \"F:\\\\tweezerui\\\\src\\\\components\\\\CameraPreview\\\\CameraPreview.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Slide } from 'react-toastify';\nimport axios from 'axios';\nimport { useCanvases } from '../../CanvasContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mainServerURL = \"http://10.0.63.153:4000\";\nconst camServerURLs = {\n  1: \"http://10.0.63.153:4001\",\n  2: \"http://10.0.63.153:4002\"\n};\nfunction CameraPreview() {\n  _s();\n  const [allCameras, setAllCameras] = useState([]);\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\n  const canvasTrackRef = useRef(null);\n  const canvasHologramRef = useRef(null);\n  const {\n    canvasRefs,\n    imageProps,\n    setImageProps,\n    drawProps,\n    setDrawProps,\n    serverInfo,\n    localStorageIDs\n  } = useCanvases();\n  let drawing = false;\n  const draw = event => {\n    if (!drawing) return;\n    const canvas = canvasHologramRef.current;\n    const ctx = canvas.getContext('2d');\n    const rect = canvas.getBoundingClientRect(); // get the position of the canvas\n\n    const x = event.clientX - drawProps.startX;\n    const y = event.clientY - drawProps.startY;\n    ctx.lineWidth = 5;\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'red';\n    ctx.lineTo(x, y);\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(x, y);\n  };\n  const startDrawing = event => {\n    drawing = true;\n    draw(event);\n  };\n  const stopDrawing = () => {\n    drawing = false;\n    const canvas = canvasHologramRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n  };\n  useEffect(() => {\n    const canvas = canvasHologramRef.current;\n    canvas.addEventListener('mousedown', startDrawing);\n    canvas.addEventListener('mousemove', draw);\n    canvas.addEventListener('mouseup', stopDrawing);\n    canvas.addEventListener('mouseout', stopDrawing);\n    return () => {\n      canvas.removeEventListener('mousedown', startDrawing);\n      canvas.removeEventListener('mousemove', draw);\n      canvas.removeEventListener('mouseup', stopDrawing);\n      canvas.removeEventListener('mouseout', stopDrawing);\n    };\n  }, []);\n  const [maxWidth, setMaxWidth] = useState(1000);\n  const [cameras, setCameras] = useState(() => {\n    var _storedCameras$, _storedCameras$$formV, _storedCameras$2, _storedCameras$2$form, _storedCameras$3, _storedCameras$3$form, _storedCameras$4, _storedCameras$4$form, _storedCameras$5, _storedCameras$5$form, _storedCameras$6, _storedCameras$6$form, _storedCameras$7, _storedCameras$7$form, _storedCameras$8, _storedCameras$8$form, _storedCameras$9, _storedCameras$9$form, _storedCameras$10, _storedCameras$10$for, _storedCameras$11, _storedCameras$11$for, _storedCameras$12, _storedCameras$12$for, _storedCameras$13, _storedCameras$13$for, _storedCameras$14, _storedCameras$14$for;\n    // Load initial camera state from localStorage\n    const storedCameras = JSON.parse(localStorage.getItem(localStorageIDs.camera)) || {};\n    return {\n      1: {\n        isPreviewActive: false,\n        isStreaming: false,\n        showModalSettings: false,\n        isSwitchActive: true,\n        formValues: {\n          camId: ((_storedCameras$ = storedCameras[1]) === null || _storedCameras$ === void 0 ? void 0 : (_storedCameras$$formV = _storedCameras$.formValues) === null || _storedCameras$$formV === void 0 ? void 0 : _storedCameras$$formV.camId) || 'Select Option',\n          folderPath: ((_storedCameras$2 = storedCameras[1]) === null || _storedCameras$2 === void 0 ? void 0 : (_storedCameras$2$form = _storedCameras$2.formValues) === null || _storedCameras$2$form === void 0 ? void 0 : _storedCameras$2$form.folderPath) || 'F:/',\n          targetFPS: ((_storedCameras$3 = storedCameras[1]) === null || _storedCameras$3 === void 0 ? void 0 : (_storedCameras$3$form = _storedCameras$3.formValues) === null || _storedCameras$3$form === void 0 ? void 0 : _storedCameras$3$form.targetFPS) || '10',\n          imageFormat: ((_storedCameras$4 = storedCameras[1]) === null || _storedCameras$4 === void 0 ? void 0 : (_storedCameras$4$form = _storedCameras$4.formValues) === null || _storedCameras$4$form === void 0 ? void 0 : _storedCameras$4$form.imageFormat) || '',\n          exposureTime: ((_storedCameras$5 = storedCameras[1]) === null || _storedCameras$5 === void 0 ? void 0 : (_storedCameras$5$form = _storedCameras$5.formValues) === null || _storedCameras$5$form === void 0 ? void 0 : _storedCameras$5$form.exposureTime) || \"10.0\",\n          gain: ((_storedCameras$6 = storedCameras[1]) === null || _storedCameras$6 === void 0 ? void 0 : (_storedCameras$6$form = _storedCameras$6.formValues) === null || _storedCameras$6$form === void 0 ? void 0 : _storedCameras$6$form.gain) || \"1.0\",\n          requestLocate: ((_storedCameras$7 = storedCameras[1]) === null || _storedCameras$7 === void 0 ? void 0 : (_storedCameras$7$form = _storedCameras$7.formValues) === null || _storedCameras$7$form === void 0 ? void 0 : _storedCameras$7$form.requestLocate) || false\n        },\n        comment: \"Select the camera ID from the dropdown list\",\n        isVirtual: false,\n        fps: 0,\n        rxSpeed: 0.0,\n        isFirstImageReceived: false,\n        canvasWidth: -1,\n        canvasHeight: -1\n      },\n      2: {\n        isPreviewActive: false,\n        isStreaming: false,\n        showModalSettings: false,\n        isSwitchActive: true,\n        formValues: {\n          camId: ((_storedCameras$8 = storedCameras[2]) === null || _storedCameras$8 === void 0 ? void 0 : (_storedCameras$8$form = _storedCameras$8.formValues) === null || _storedCameras$8$form === void 0 ? void 0 : _storedCameras$8$form.camId) || 'Select Option',\n          folderPath: ((_storedCameras$9 = storedCameras[2]) === null || _storedCameras$9 === void 0 ? void 0 : (_storedCameras$9$form = _storedCameras$9.formValues) === null || _storedCameras$9$form === void 0 ? void 0 : _storedCameras$9$form.folderPath) || 'F:/',\n          targetFPS: ((_storedCameras$10 = storedCameras[2]) === null || _storedCameras$10 === void 0 ? void 0 : (_storedCameras$10$for = _storedCameras$10.formValues) === null || _storedCameras$10$for === void 0 ? void 0 : _storedCameras$10$for.targetFPS) || '10',\n          imageFormat: ((_storedCameras$11 = storedCameras[2]) === null || _storedCameras$11 === void 0 ? void 0 : (_storedCameras$11$for = _storedCameras$11.formValues) === null || _storedCameras$11$for === void 0 ? void 0 : _storedCameras$11$for.imageFormat) || '',\n          exposureTime: ((_storedCameras$12 = storedCameras[2]) === null || _storedCameras$12 === void 0 ? void 0 : (_storedCameras$12$for = _storedCameras$12.formValues) === null || _storedCameras$12$for === void 0 ? void 0 : _storedCameras$12$for.exposureTime) || \"10.0\",\n          gain: ((_storedCameras$13 = storedCameras[2]) === null || _storedCameras$13 === void 0 ? void 0 : (_storedCameras$13$for = _storedCameras$13.formValues) === null || _storedCameras$13$for === void 0 ? void 0 : _storedCameras$13$for.gain) || \"1.0\",\n          requestLocate: ((_storedCameras$14 = storedCameras[1]) === null || _storedCameras$14 === void 0 ? void 0 : (_storedCameras$14$for = _storedCameras$14.formValues) === null || _storedCameras$14$for === void 0 ? void 0 : _storedCameras$14$for.requestLocate) || false\n        },\n        comment: \"Select the camera ID from the dropdown list\",\n        isVirtual: false,\n        fps: 0,\n        rxSpeed: 0.0,\n        isFirstImageReceived: false,\n        canvasWidth: -1,\n        canvasHeight: -1\n      }\n    };\n  });\n  useEffect(() => {\n    // set timeout to send request to /heartbeat of both the servers and it controls the is_preview and is switch active\n    // if the server is not responding, is_preview is false, is_switch_active is true\n\n    const fetchHeartbeat = cameraId => {\n      const baseURL = camServerURLs[cameraId];\n      const endpoint = '/heartbeat';\n      axios.get(baseURL + endpoint).then(response => {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            isPreviewActive: true\n          }\n        }));\n      }).catch(error => {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            isPreviewActive: false\n          }\n        }));\n      });\n    };\n    setInterval(() => {\n      fetchHeartbeat(1);\n      fetchHeartbeat(2);\n    }, 2000);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(localStorageIDs.camera, JSON.stringify(cameras));\n  }, [cameras]);\n  useEffect(() => {\n    const fetchCameraDetails = async () => {\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\n        try {\n          const response = await axios.get(camServerURLs[1] + \"/get_all_camera_details\");\n          throwErrorIfNotSuccess(response, null);\n          setAllCameras(response.data.data);\n        } catch (error) {\n          showToast(\"Error in fetching camera details\", \"error\");\n          showToast(error.message, \"error\");\n        }\n      }\n    };\n    fetchCameraDetails();\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\n  const handleInputChange = (event, cameraId) => {\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        formValues: {\n          ...prevCameras[cameraId].formValues,\n          [event.target.name]: event.target.value\n        }\n      }\n    }));\n  };\n  useEffect(() => {\n    const canvas = canvasHologramRef.current;\n    const context = canvas.getContext('2d');\n\n    // Draw a hollow circle at x =100, y = 50\n    context.beginPath();\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\n    context.stroke();\n  }, []);\n  useEffect(() => {\n    const updateCameraComment = cameraId => {\n      const selectedCamera = allCameras.find(camera => camera.camera_id === cameras[cameraId].formValues.camId);\n      if (!selectedCamera) {\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            comment: \"Select a camera\",\n            isVirtual: true\n          }\n        }));\n        return;\n      }\n      ;\n      const isVirtual = !selectedCamera.details.is_real;\n      let comment = selectedCamera.details.comment;\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          comment: comment,\n          isVirtual: isVirtual\n        }\n      }));\n    };\n    updateCameraComment(1);\n    updateCameraComment(2);\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\n  const showToast = (msg, type, delay = 2000) => {\n    toast[type](msg, {\n      position: \"bottom-right\",\n      autoClose: delay,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: \"dark\",\n      transition: Slide\n    });\n  };\n  const throwErrorIfNotSuccess = (response, toastId) => {\n    const success = response.data.success;\n    // raise error is success is false with response message\n    if (!success) {\n      if (toastId) {\n        toast.update(toastId, {\n          render: response.data.msg,\n          type: \"error\",\n          isLoading: false,\n          autoClose: 1000\n        });\n      }\n      throw new Error(response.data.msg);\n    }\n  };\n  const handlePreviewToggle = async cameraId => {\n    const isPreviewActive = cameras[cameraId].isPreviewActive;\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        isSwitchActive: false\n      }\n    }));\n    const action = isPreviewActive ? 'Shutting down' : 'Warming up';\n    let toastId = toast.loading(`${action} Cam ${cameraId} Server`, {\n      position: \"top-center\",\n      autoClose: 2000,\n      theme: \"dark\",\n      transition: Slide\n    });\n    try {\n      const endpoint = isPreviewActive ? '/stop_camera/' : `/warmup/camserver/${cameraId}`;\n      const baseURL = isPreviewActive ? camServerURLs[cameraId] : mainServerURL; // Use main server for warming up\n      const response = await axios[isPreviewActive ? 'post' : 'post'](baseURL + endpoint);\n      throwErrorIfNotSuccess(response, toastId);\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true,\n          isPreviewActive: !isPreviewActive,\n          isStreaming: isPreviewActive ? false : prevCameras[cameraId].isStreaming\n        }\n      }));\n      toast.update(toastId, {\n        render: response.data.msg,\n        type: response.data.success ? \"success\" : \"error\",\n        isLoading: false,\n        autoClose: 2000\n      });\n    } catch (error) {\n      // revert the camera switch to active\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true\n        }\n      }));\n      showToast(`Error in ${action.toLowerCase()} Cam Server ${cameraId}`, \"error\");\n      showToast(error.message, \"error\");\n    }\n  };\n  const handleStreamToggle = async cameraId => {\n    const isStreaming = cameras[cameraId].isStreaming;\n    setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        isSwitchActive: false\n      }\n    }));\n    const action = isStreaming ? 'Stopping' : 'Starting';\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\n      position: \"top-center\",\n      autoClose: 2000,\n      theme: \"dark\",\n      transition: Slide\n    });\n    try {\n      const endpoint = isStreaming ? 'stop_camera/' : 'start_camera/';\n      const data = isStreaming ? {} : {\n        camera_id: cameras[cameraId].formValues.camId,\n        fps: cameras[cameraId].formValues.targetFPS,\n        exposure_time: cameras[cameraId].formValues.exposureTime,\n        gain: cameras[cameraId].formValues.gain,\n        image_format: cameras[cameraId].formValues.imageFormat,\n        folder_path: cameras[cameraId].formValues.folderPath\n      };\n      const response = await axios.post(camServerURLs[cameraId] + `/${endpoint}`, data);\n      throwErrorIfNotSuccess(response, toastId);\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true,\n          isStreaming: !isStreaming\n        }\n      }));\n      toast.update(toastId, {\n        render: response.data.msg,\n        type: response.data.success ? \"success\" : \"error\",\n        isLoading: false,\n        autoClose: 2000\n      });\n    } catch (error) {\n      // revert the camera switch to active\n      setCameras(prevCameras => ({\n        ...prevCameras,\n        [cameraId]: {\n          ...prevCameras[cameraId],\n          isSwitchActive: true\n        }\n      }));\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\n      showToast(error.message, \"error\");\n    }\n  };\n  useEffect(() => {\n    const webSocketConnections = {}; // Store WebSocket connections\n\n    const connectToWebSocket = cameraId => {\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\n      let frameCount = 0;\n      let dataCount = 0;\n      let firstImageReceived = false;\n      const ip = camServerURLs[cameraId].replace(/(^\\w+:|^)\\/\\//, '');\n      const websocket = new WebSocket(\"ws://\" + ip + \"/ws\");\n      webSocketConnections[cameraId] = websocket; // Store the connection\n      websocket.binaryType = 'blob';\n      const updateFpsAndSpeed = () => {\n        console.log(frameCount, cameraId);\n\n        // set the fps and speed for the camera\n        const copyFrameCount = frameCount;\n        const copyDataCount = dataCount;\n        setCameras(prevCameras => ({\n          ...prevCameras,\n          [cameraId]: {\n            ...prevCameras[cameraId],\n            fps: copyFrameCount,\n            rxSpeed: copyDataCount / 1024\n          }\n        }));\n        frameCount = 0;\n        dataCount = 0;\n      };\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\n      const img = new Image();\n      img.onload = () => {\n        const canvas = canvasRefs[cameraId].current;\n        const ctx = canvas.getContext('2d');\n        if (!firstImageReceived) {\n          // now apply the rule that max width is 1000\n          const scaleFactor = maxWidth / img.width;\n          canvas.width = img.width * scaleFactor;\n          canvas.height = img.height * scaleFactor;\n          firstImageReceived = true;\n          setCameras(prevCameras => ({\n            ...prevCameras,\n            [cameraId]: {\n              ...prevCameras[cameraId],\n              isFirstImageReceived: true,\n              canvasWidth: canvas.width,\n              canvasHeight: canvas.height\n            }\n          }));\n          imageProps.width = img.width;\n          imageProps.height = img.height;\n          setImageProps({\n            width: img.width,\n            height: img.height\n          });\n          drawProps.scale = scaleFactor;\n          drawProps.centerX = canvas.width / 2;\n          drawProps.centerY = canvas.height / 2;\n          const rect = canvas.getBoundingClientRect();\n          drawProps.startX = rect.left;\n          drawProps.startY = rect.top;\n          drawProps.endX = rect.right;\n          drawProps.endY = rect.bottom;\n\n          // set the height and width of the other two canvases\n          canvasTrackRef.current.width = canvas.width;\n          canvasTrackRef.current.height = canvas.height;\n          canvasHologramRef.current.width = canvas.width;\n          canvasHologramRef.current.height = canvas.height;\n\n          // since i changed the values manually, i need to update the context by calling setDrawProps\n          // i set the values directly because I want the effect to be instant and not wait for the next render\n          setDrawProps({\n            scale: scaleFactor,\n            centerX: canvas.width / 2,\n            centerY: canvas.height / 2,\n            startX: rect.left,\n            startY: rect.top,\n            endX: rect.right,\n            endY: rect.bottom\n          });\n        }\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\n        URL.revokeObjectURL(img.src);\n      };\n      websocket.onmessage = event => {\n        const url = URL.createObjectURL(event.data);\n        img.src = url;\n        frameCount++;\n        dataCount += event.data.size;\n      };\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\n      websocket.onerror = error => console.error('WebSocket error:', error);\n      websocket.onclose = () => {\n        console.log(`Disconnected from Cam Server ${cameraId}`);\n        clearInterval(intervalId);\n        delete webSocketConnections[cameraId]; // Remove connection from the object\n      };\n    };\n    connectToWebSocket(1);\n    connectToWebSocket(2);\n\n    // Clean up WebSocket connections when component unmounts\n    return () => {\n      Object.values(webSocketConnections).forEach(ws => ws.close());\n    };\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\n  const renderCameraControls = cameraId => {\n    const {\n      isPreviewActive,\n      isStreaming,\n      showModalSettings,\n      isSwitchActive,\n      formValues,\n      comment,\n      isVirtual,\n      fps,\n      rxSpeed\n    } = cameras[cameraId];\n    const handleModalToggle = () => setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        showModalSettings: !prevCameras[cameraId].showModalSettings\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"d-flex align-items-center me-3 fs-4 fw-bold\",\n        style: {\n          color: !isSwitchActive ? 'gray' : 'inherit'\n        },\n        children: [\"Cam \", cameraId, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '10px',\n            width: '10px',\n            backgroundColor: isPreviewActive ? 'green' : 'red',\n            borderRadius: '50%',\n            display: 'inline-block',\n            marginLeft: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          marginLeft: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleModalToggle,\n            disabled: !isPreviewActive || !isSwitchActive || isStreaming,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCog\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => handleStreamToggle(cameraId),\n            disabled: !isPreviewActive || !isSwitchActive,\n            style: {\n              backgroundColor: isStreaming ? 'orange' : ''\n            },\n            children: isStreaming ? 'Stop Stream' : 'Start Stream'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), 1 == 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        style: {\n          marginLeft: '30px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"FPS: \", fps.toFixed(2), \" | Rx Speed: \", (rxSpeed / 1024).toFixed(2), \" Mb/s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 11\n      }, this)]\n    }, cameraId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }, this);\n  };\n  const renderCameraModal = cameraId => {\n    const {\n      showModalSettings,\n      formValues,\n      comment,\n      isVirtual\n    } = cameras[cameraId];\n    const handleCloseModal = () => setCameras(prevCameras => ({\n      ...prevCameras,\n      [cameraId]: {\n        ...prevCameras[cameraId],\n        showModalSettings: false\n      }\n    }));\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModalSettings,\n      onHide: handleCloseModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Cam Server \", cameraId, \" Configuration\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Camera ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"camId\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.camId,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Option\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 17\n              }, this), allCameras.map((camera, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: camera.camera_id,\n                children: camera.camera_id\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: comment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 13\n          }, this), isVirtual && /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Folder Path\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"folderPath\",\n              placeholder: \"Enter folder path\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.folderPath\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 654,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Target Streaming FPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"targetFPS\",\n              type: \"number\",\n              placeholder: \"Enter FPS\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.targetFPS\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Exposure Time (ms)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"exposureTime\",\n              type: \"number\",\n              step: \"0.01\",\n              placeholder: \"Enter exposure time in ms\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.exposureTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Gain\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 674,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              name: \"gain\",\n              type: \"number\",\n              step: \"0.01\",\n              placeholder: \"Enter gain\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.gain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 675,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image Format\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              name: \"imageFormat\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.imageFormat,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"compressed\",\n                children: \"Compressed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"original\",\n                children: \"Original\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 690,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"checkbox\",\n              label: \"Request Locate\",\n              onChange: e => handleInputChange(e, cameraId),\n              value: formValues.requestLocate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 695,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 694,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 9\n      }, this)]\n    }, cameraId, true, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row justify-content-between\",\n      children: [1, 2].map(cameraId => renderCameraControls(cameraId))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 710,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        width: '100%',\n        height: '100%',\n        marginTop: '20px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n        placeItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[1],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 1,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 734,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRefs[2],\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 0.5,\n          zIndex: 2,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasTrackRef,\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 3,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 753,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasHologramRef,\n        style: {\n          gridArea: '1 / 1 / 2 / 2',\n          opacity: 1.0,\n          zIndex: 4,\n          backgroundColor: 'transparent'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 724,\n      columnNumber: 7\n    }, this), [1, 2].map(cameraId => renderCameraModal(cameraId)), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 709,\n    columnNumber: 5\n  }, this);\n}\n_s(CameraPreview, \"U9HepjwHv145WMJ4JeKoAiViRlU=\", false, function () {\n  return [useCanvases];\n});\n_c = CameraPreview;\nexport default CameraPreview;\nvar _c;\n$RefreshReg$(_c, \"CameraPreview\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Modal","Button","Form","FontAwesomeIcon","faCog","ToastContainer","toast","Slide","axios","useCanvases","jsxDEV","_jsxDEV","mainServerURL","camServerURLs","CameraPreview","_s","allCameras","setAllCameras","canvasTrackRef","canvasHologramRef","canvasRefs","imageProps","setImageProps","drawProps","setDrawProps","serverInfo","localStorageIDs","drawing","draw","event","canvas","current","ctx","getContext","rect","getBoundingClientRect","x","clientX","startX","y","clientY","startY","lineWidth","lineCap","strokeStyle","lineTo","stroke","beginPath","moveTo","startDrawing","stopDrawing","addEventListener","removeEventListener","maxWidth","setMaxWidth","cameras","setCameras","_storedCameras$","_storedCameras$$formV","_storedCameras$2","_storedCameras$2$form","_storedCameras$3","_storedCameras$3$form","_storedCameras$4","_storedCameras$4$form","_storedCameras$5","_storedCameras$5$form","_storedCameras$6","_storedCameras$6$form","_storedCameras$7","_storedCameras$7$form","_storedCameras$8","_storedCameras$8$form","_storedCameras$9","_storedCameras$9$form","_storedCameras$10","_storedCameras$10$for","_storedCameras$11","_storedCameras$11$for","_storedCameras$12","_storedCameras$12$for","_storedCameras$13","_storedCameras$13$for","_storedCameras$14","_storedCameras$14$for","storedCameras","JSON","parse","localStorage","getItem","camera","isPreviewActive","isStreaming","showModalSettings","isSwitchActive","formValues","camId","folderPath","targetFPS","imageFormat","exposureTime","gain","requestLocate","comment","isVirtual","fps","rxSpeed","isFirstImageReceived","canvasWidth","canvasHeight","fetchHeartbeat","cameraId","baseURL","endpoint","get","then","response","prevCameras","catch","error","setInterval","setItem","stringify","fetchCameraDetails","throwErrorIfNotSuccess","data","showToast","message","handleInputChange","target","name","value","context","arc","Math","PI","updateCameraComment","selectedCamera","find","camera_id","details","is_real","msg","type","delay","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","transition","toastId","success","update","render","isLoading","Error","handlePreviewToggle","action","loading","toLowerCase","handleStreamToggle","exposure_time","image_format","folder_path","post","webSocketConnections","connectToWebSocket","frameCount","dataCount","firstImageReceived","ip","replace","websocket","WebSocket","binaryType","updateFpsAndSpeed","console","log","copyFrameCount","copyDataCount","intervalId","img","Image","onload","scaleFactor","width","height","scale","centerX","centerY","left","top","endX","right","endY","bottom","drawImage","URL","revokeObjectURL","src","onmessage","url","createObjectURL","size","onopen","onerror","onclose","clearInterval","Object","values","forEach","ws","close","renderCameraControls","handleModalToggle","className","children","style","color","backgroundColor","borderRadius","display","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","disabled","icon","toFixed","renderCameraModal","handleCloseModal","show","onHide","Header","closeButton","Title","Body","Group","Label","Select","onChange","e","map","index","Text","Control","placeholder","step","Check","label","marginTop","justifyContent","alignItems","placeItems","ref","gridArea","opacity","zIndex","_c","$RefreshReg$"],"sources":["F:/tweezerui/src/components/CameraPreview/CameraPreview.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCog } from '@fortawesome/free-solid-svg-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Slide } from 'react-toastify';\r\nimport axios from 'axios';\r\nimport { useCanvases } from '../../CanvasContext';\r\nconst mainServerURL = \"http://10.0.63.153:4000\";\r\nconst camServerURLs = {\r\n  1: \"http://10.0.63.153:4001\",\r\n  2: \"http://10.0.63.153:4002\"\r\n};\r\n\r\nfunction CameraPreview() {\r\n  const [allCameras, setAllCameras] = useState([]);\r\n  // const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\r\n  const canvasTrackRef = useRef(null);\r\n  const canvasHologramRef = useRef(null);\r\n\r\n  const { canvasRefs, imageProps, setImageProps, drawProps, setDrawProps, serverInfo, localStorageIDs } = useCanvases();\r\n\r\n  let drawing = false;\r\n\r\n  const draw = (event) => {\r\n    if (!drawing) return;\r\n    const canvas = canvasHologramRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    const rect = canvas.getBoundingClientRect(); // get the position of the canvas\r\n\r\n\r\n\r\n    const x = event.clientX - drawProps.startX;\r\n    const y = event.clientY - drawProps.startY;\r\n\r\n    ctx.lineWidth = 5;\r\n    ctx.lineCap = 'round';\r\n    ctx.strokeStyle = 'red';\r\n\r\n    ctx.lineTo(x, y);\r\n    ctx.stroke();\r\n    ctx.beginPath();\r\n    ctx.moveTo(x, y);\r\n  };\r\n\r\n  const startDrawing = (event) => {\r\n    drawing = true;\r\n    draw(event);\r\n  };\r\n\r\n  const stopDrawing = () => {\r\n    drawing = false;\r\n    const canvas = canvasHologramRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n    ctx.beginPath();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasHologramRef.current;\r\n    canvas.addEventListener('mousedown', startDrawing);\r\n    canvas.addEventListener('mousemove', draw);\r\n    canvas.addEventListener('mouseup', stopDrawing);\r\n    canvas.addEventListener('mouseout', stopDrawing);\r\n\r\n    return () => {\r\n      canvas.removeEventListener('mousedown', startDrawing);\r\n      canvas.removeEventListener('mousemove', draw);\r\n      canvas.removeEventListener('mouseup', stopDrawing);\r\n      canvas.removeEventListener('mouseout', stopDrawing);\r\n    };\r\n  }, []);\r\n\r\n\r\n\r\n  const [maxWidth, setMaxWidth] = useState(1000);\r\n\r\n  const [cameras, setCameras] = useState(() => {\r\n    // Load initial camera state from localStorage\r\n    const storedCameras = JSON.parse(localStorage.getItem(localStorageIDs.camera)) || {};\r\n    return {\r\n      1: {\r\n        isPreviewActive: false,\r\n        isStreaming: false,\r\n        showModalSettings: false,\r\n        isSwitchActive: true,\r\n        formValues: {\r\n          camId: storedCameras[1]?.formValues?.camId || 'Select Option',\r\n          folderPath: storedCameras[1]?.formValues?.folderPath || 'F:/',\r\n          targetFPS: storedCameras[1]?.formValues?.targetFPS || '10',\r\n          imageFormat: storedCameras[1]?.formValues?.imageFormat || '',\r\n          exposureTime: storedCameras[1]?.formValues?.exposureTime || \"10.0\",\r\n          gain: storedCameras[1]?.formValues?.gain || \"1.0\",\r\n          requestLocate: storedCameras[1]?.formValues?.requestLocate || false,\r\n        },\r\n        comment: \"Select the camera ID from the dropdown list\",\r\n        isVirtual: false,\r\n        fps: 0,\r\n        rxSpeed: 0.0,\r\n        isFirstImageReceived: false,\r\n        canvasWidth: -1,\r\n        canvasHeight: -1\r\n      },\r\n      2: {\r\n        isPreviewActive: false,\r\n        isStreaming: false,\r\n        showModalSettings: false,\r\n        isSwitchActive: true,\r\n        formValues: {\r\n          camId: storedCameras[2]?.formValues?.camId || 'Select Option',\r\n          folderPath: storedCameras[2]?.formValues?.folderPath || 'F:/',\r\n          targetFPS: storedCameras[2]?.formValues?.targetFPS || '10',\r\n          imageFormat: storedCameras[2]?.formValues?.imageFormat || '',\r\n          exposureTime: storedCameras[2]?.formValues?.exposureTime || \"10.0\",\r\n          gain: storedCameras[2]?.formValues?.gain || \"1.0\",\r\n          requestLocate: storedCameras[1]?.formValues?.requestLocate || false,\r\n        },\r\n        comment: \"Select the camera ID from the dropdown list\",\r\n        isVirtual: false,\r\n        fps: 0,\r\n        rxSpeed: 0.0,\r\n        isFirstImageReceived: false,\r\n        canvasWidth: -1,\r\n        canvasHeight: -1,\r\n      }\r\n    };\r\n  });\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    // set timeout to send request to /heartbeat of both the servers and it controls the is_preview and is switch active\r\n    // if the server is not responding, is_preview is false, is_switch_active is true\r\n\r\n\r\n\r\n    const fetchHeartbeat = (cameraId) => {\r\n\r\n\r\n      const baseURL = camServerURLs[cameraId];\r\n      const endpoint = '/heartbeat';\r\n\r\n\r\n      axios.get(baseURL + endpoint)\r\n        .then((response) => {\r\n\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isPreviewActive: true\r\n            }\r\n          }));\r\n\r\n        })\r\n        .catch((error) => {\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isPreviewActive: false\r\n            }\r\n          }));\r\n\r\n\r\n        });\r\n    };\r\n\r\n    setInterval(() => {\r\n      fetchHeartbeat(1);\r\n      fetchHeartbeat(2);\r\n    }, 2000);\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageIDs.camera, JSON.stringify(cameras));\r\n  }, [cameras]);\r\n\r\n  useEffect(() => {\r\n    const fetchCameraDetails = async () => {\r\n      if (cameras[1].showModalSettings || cameras[2].showModalSettings) {\r\n        try {\r\n          const response = await axios.get(camServerURLs[1] + \"/get_all_camera_details\");\r\n          throwErrorIfNotSuccess(response, null);\r\n\r\n\r\n          setAllCameras(response.data.data);\r\n        } catch (error) {\r\n          showToast(\"Error in fetching camera details\", \"error\");\r\n          showToast(error.message, \"error\");\r\n        }\r\n      }\r\n    };\r\n\r\n    fetchCameraDetails();\r\n  }, [cameras[1].showModalSettings, cameras[2].showModalSettings]);\r\n\r\n\r\n\r\n  const handleInputChange = (event, cameraId) => {\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        formValues: {\r\n          ...prevCameras[cameraId].formValues,\r\n          [event.target.name]: event.target.value,\r\n        },\r\n      }\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasHologramRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // Draw a hollow circle at x =100, y = 50\r\n    context.beginPath();\r\n    context.arc(150, 50, 20, 0, 2 * Math.PI);\r\n    context.stroke();\r\n\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateCameraComment = (cameraId) => {\r\n      const selectedCamera = allCameras.find((camera) => camera.camera_id === cameras[cameraId].formValues.camId);\r\n      if (!selectedCamera) {\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            comment: \"Select a camera\",\r\n            isVirtual: true,\r\n          }\r\n        }));\r\n\r\n        return\r\n      };\r\n\r\n      const isVirtual = !selectedCamera.details.is_real;\r\n      let comment = selectedCamera.details.comment;\r\n      comment = comment + \" | \" + (isVirtual ? \"Virtual Camera\" : \"Real Camera\");\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          comment: comment,\r\n          isVirtual: isVirtual,\r\n        }\r\n      }));\r\n    };\r\n\r\n    updateCameraComment(1);\r\n    updateCameraComment(2);\r\n  }, [cameras[1].formValues.camId, cameras[2].formValues.camId, allCameras]);\r\n\r\n  const showToast = (msg, type, delay = 2000) => {\r\n    toast[type](msg, {\r\n      position: \"bottom-right\",\r\n      autoClose: delay,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n      progress: undefined,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n  };\r\n\r\n  const throwErrorIfNotSuccess = (response, toastId) => {\r\n\r\n    const success = response.data.success;\r\n    // raise error is success is false with response message\r\n    if (!success) {\r\n\r\n\r\n      if (toastId) {\r\n        toast.update(toastId, {\r\n          render: response.data.msg,\r\n          type: \"error\",\r\n          isLoading: false,\r\n          autoClose: 1000,\r\n        });\r\n      }\r\n      throw new Error(response.data.msg);\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n  const handlePreviewToggle = async (cameraId) => {\r\n    const isPreviewActive = cameras[cameraId].isPreviewActive;\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        isSwitchActive: false,\r\n      }\r\n    }));\r\n\r\n    const action = isPreviewActive ? 'Shutting down' : 'Warming up';\r\n    let toastId = toast.loading(`${action} Cam ${cameraId} Server`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n\r\n    try {\r\n      const endpoint = isPreviewActive ? '/stop_camera/' : `/warmup/camserver/${cameraId}`;\r\n      const baseURL = isPreviewActive ? camServerURLs[cameraId] : mainServerURL; // Use main server for warming up\r\n      const response = await axios[isPreviewActive ? 'post' : 'post'](baseURL + endpoint);\r\n\r\n      throwErrorIfNotSuccess(response, toastId);\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n          isPreviewActive: !isPreviewActive,\r\n          isStreaming: isPreviewActive ? false : prevCameras[cameraId].isStreaming,\r\n        }\r\n      }));\r\n\r\n      toast.update(toastId, {\r\n        render: response.data.msg,\r\n        type: response.data.success ? \"success\" : \"error\",\r\n        isLoading: false,\r\n        autoClose: 2000,\r\n      });\r\n    } catch (error) {\r\n\r\n      // revert the camera switch to active\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n        }\r\n      }));\r\n      showToast(`Error in ${action.toLowerCase()} Cam Server ${cameraId}`, \"error\");\r\n      showToast(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  const handleStreamToggle = async (cameraId) => {\r\n    const isStreaming = cameras[cameraId].isStreaming;\r\n    setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        isSwitchActive: false,\r\n      }\r\n    }));\r\n\r\n    const action = isStreaming ? 'Stopping' : 'Starting';\r\n    let toastId = toast.loading(`${action} ${cameras[cameraId].formValues.camId}`, {\r\n      position: \"top-center\",\r\n      autoClose: 2000,\r\n      theme: \"dark\",\r\n      transition: Slide,\r\n    });\r\n\r\n    try {\r\n      const endpoint = isStreaming ? 'stop_camera/' : 'start_camera/';\r\n      const data = isStreaming ? {} : {\r\n        camera_id: cameras[cameraId].formValues.camId,\r\n        fps: cameras[cameraId].formValues.targetFPS,\r\n        exposure_time: cameras[cameraId].formValues.exposureTime,\r\n        gain: cameras[cameraId].formValues.gain,\r\n        image_format: cameras[cameraId].formValues.imageFormat,\r\n        folder_path: cameras[cameraId].formValues.folderPath,\r\n      };\r\n\r\n      const response = await axios.post(camServerURLs[cameraId] + `/${endpoint}`, data);\r\n\r\n      throwErrorIfNotSuccess(response, toastId);\r\n\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n          isStreaming: !isStreaming,\r\n        }\r\n      }));\r\n\r\n      toast.update(toastId, {\r\n        render: response.data.msg,\r\n        type: response.data.success ? \"success\" : \"error\",\r\n        isLoading: false,\r\n        autoClose: 2000,\r\n      });\r\n    } catch (error) {\r\n\r\n      // revert the camera switch to active\r\n      setCameras(prevCameras => ({\r\n        ...prevCameras,\r\n        [cameraId]: {\r\n          ...prevCameras[cameraId],\r\n          isSwitchActive: true,\r\n        }\r\n      }));\r\n\r\n\r\n      showToast(`Error in ${action.toLowerCase()} camera ${cameraId}`, \"error\");\r\n      showToast(error.message, \"error\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const webSocketConnections = {}; // Store WebSocket connections\r\n\r\n    const connectToWebSocket = (cameraId) => {\r\n      if (!cameras[cameraId].isPreviewActive || webSocketConnections[cameraId]) return;\r\n\r\n      let frameCount = 0;\r\n      let dataCount = 0;\r\n      let firstImageReceived = false;\r\n\r\n      const ip = camServerURLs[cameraId].replace(/(^\\w+:|^)\\/\\//, '');\r\n      const websocket = new WebSocket(\"ws://\" + ip + \"/ws\");\r\n      webSocketConnections[cameraId] = websocket; // Store the connection\r\n      websocket.binaryType = 'blob';\r\n\r\n      const updateFpsAndSpeed = () => {\r\n        console.log(frameCount, cameraId)\r\n\r\n        // set the fps and speed for the camera\r\n        const copyFrameCount = frameCount;\r\n        const copyDataCount = dataCount;\r\n\r\n\r\n        setCameras(prevCameras => ({\r\n          ...prevCameras,\r\n          [cameraId]: {\r\n            ...prevCameras[cameraId],\r\n            fps: copyFrameCount,\r\n            rxSpeed: copyDataCount / 1024,\r\n          }\r\n        }));\r\n\r\n        frameCount = 0;\r\n        dataCount = 0;\r\n      };\r\n\r\n      const intervalId = setInterval(updateFpsAndSpeed, 1000);\r\n\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const canvas = canvasRefs[cameraId].current;\r\n        const ctx = canvas.getContext('2d');\r\n        if (!firstImageReceived) {\r\n\r\n\r\n          // now apply the rule that max width is 1000\r\n          const scaleFactor = maxWidth / img.width;\r\n          canvas.width = img.width * scaleFactor;\r\n          canvas.height = img.height * scaleFactor;\r\n          firstImageReceived = true;\r\n\r\n          setCameras(prevCameras => ({\r\n            ...prevCameras,\r\n            [cameraId]: {\r\n              ...prevCameras[cameraId],\r\n              isFirstImageReceived: true,\r\n              canvasWidth: canvas.width,\r\n              canvasHeight: canvas.height,\r\n            }\r\n\r\n          }));\r\n\r\n\r\n\r\n          imageProps.width = img.width;\r\n          imageProps.height = img.height;\r\n\r\n          setImageProps({\r\n            width: img.width,\r\n            height: img.height\r\n          });\r\n\r\n          drawProps.scale = scaleFactor;\r\n          drawProps.centerX = canvas.width / 2;\r\n          drawProps.centerY = canvas.height / 2;\r\n\r\n          const rect = canvas.getBoundingClientRect();\r\n          drawProps.startX = rect.left;\r\n          drawProps.startY = rect.top;\r\n          drawProps.endX = rect.right;\r\n          drawProps.endY = rect.bottom;\r\n\r\n\r\n          // set the height and width of the other two canvases\r\n          canvasTrackRef.current.width = canvas.width;\r\n          canvasTrackRef.current.height = canvas.height;\r\n          canvasHologramRef.current.width = canvas.width;\r\n          canvasHologramRef.current.height = canvas.height;\r\n\r\n          // since i changed the values manually, i need to update the context by calling setDrawProps\r\n          // i set the values directly because I want the effect to be instant and not wait for the next render\r\n          setDrawProps({\r\n            scale: scaleFactor,\r\n            centerX: canvas.width / 2,\r\n            centerY: canvas.height / 2,\r\n            startX: rect.left,\r\n            startY: rect.top,\r\n            endX: rect.right,\r\n            endY: rect.bottom\r\n          });\r\n\r\n\r\n\r\n\r\n        }\r\n        ctx.drawImage(img, 0, 0, img.width, img.height, 0, 0, canvas.width, canvas.height);\r\n        URL.revokeObjectURL(img.src);\r\n      };\r\n\r\n      websocket.onmessage = (event) => {\r\n        const url = URL.createObjectURL(event.data);\r\n        img.src = url;\r\n        frameCount++;\r\n        dataCount += event.data.size;\r\n      };\r\n\r\n      websocket.onopen = () => console.log(`Connected to Cam Server ${cameraId}`);\r\n      websocket.onerror = (error) => console.error('WebSocket error:', error);\r\n      websocket.onclose = () => {\r\n        console.log(`Disconnected from Cam Server ${cameraId}`);\r\n        clearInterval(intervalId);\r\n        delete webSocketConnections[cameraId]; // Remove connection from the object\r\n      };\r\n    };\r\n\r\n    connectToWebSocket(1);\r\n    connectToWebSocket(2);\r\n\r\n    // Clean up WebSocket connections when component unmounts\r\n    return () => {\r\n      Object.values(webSocketConnections).forEach(ws => ws.close());\r\n    };\r\n\r\n  }, [cameras[1].isPreviewActive, cameras[2].isPreviewActive]);\r\n\r\n\r\n  const renderCameraControls = (cameraId) => {\r\n    const { isPreviewActive, isStreaming, showModalSettings, isSwitchActive, formValues, comment, isVirtual, fps, rxSpeed } = cameras[cameraId];\r\n    const handleModalToggle = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: !prevCameras[cameraId].showModalSettings,\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <div className=\"d-flex justify-content-center justify-content-center align-items-center\" key={cameraId}>\r\n\r\n\r\n        <span className=\"d-flex align-items-center me-3 fs-4 fw-bold\" style={{ color: !isSwitchActive ? 'gray' : 'inherit' }}>\r\n          Cam {cameraId}\r\n          <div style={{\r\n            height: '10px',\r\n            width: '10px',\r\n            backgroundColor: isPreviewActive ? 'green' : 'red',\r\n            borderRadius: '50%',\r\n            display: 'inline-block',\r\n            marginLeft: '5px'\r\n          }}></div>\r\n        </span>\r\n\r\n\r\n\r\n        {/* <div className=\"form-check form-switch fs-5\">\r\n          <input\r\n            className=\"form-check-input\"\r\n            type=\"checkbox\"\r\n            role=\"switch\"\r\n            disabled={!isSwitchActive}\r\n            checked={isPreviewActive}\r\n            onChange={() => handlePreviewToggle(cameraId)}\r\n          />\r\n        </div> */}\r\n\r\n        <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n          <div className=\"btn-group\">\r\n            <Button variant=\"primary\" onClick={handleModalToggle} disabled={!isPreviewActive || !isSwitchActive || isStreaming}>\r\n              <FontAwesomeIcon icon={faCog} />\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => handleStreamToggle(cameraId)}\r\n              disabled={!isPreviewActive || !isSwitchActive}\r\n              style={{ backgroundColor: isStreaming ? 'orange' : '' }}\r\n            >\r\n              {isStreaming ? 'Stop Stream' : 'Start Stream'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {1 == 1 && (\r\n          <div className=\"d-flex justify-content-center\" style={{ marginLeft: '30px' }}>\r\n            <div>FPS: {fps.toFixed(2)} | Rx Speed: {(rxSpeed / 1024).toFixed(2)} Mb/s</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderCameraModal = (cameraId) => {\r\n    const { showModalSettings, formValues, comment, isVirtual } = cameras[cameraId];\r\n    const handleCloseModal = () => setCameras(prevCameras => ({\r\n      ...prevCameras,\r\n      [cameraId]: {\r\n        ...prevCameras[cameraId],\r\n        showModalSettings: false,\r\n      }\r\n    }));\r\n\r\n    return (\r\n      <Modal show={showModalSettings} onHide={handleCloseModal} key={cameraId}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Cam Server {cameraId} Configuration</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Camera ID</Form.Label>\r\n              <Form.Select name=\"camId\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.camId}>\r\n                <option value=\"\">Select Option</option>\r\n                {allCameras.map((camera, index) => (\r\n                  <option key={index} value={camera.camera_id}>\r\n                    {camera.camera_id}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n              <Form.Text className=\"text-muted\">\r\n                {comment}\r\n              </Form.Text>\r\n            </Form.Group>\r\n            {isVirtual && (\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Folder Path</Form.Label>\r\n                <Form.Control name=\"folderPath\" placeholder=\"Enter folder path\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.folderPath} />\r\n              </Form.Group>\r\n            )}\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Target Streaming FPS</Form.Label>\r\n              <Form.Control name=\"targetFPS\" type=\"number\" placeholder=\"Enter FPS\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.targetFPS} />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Exposure Time (ms)</Form.Label>\r\n              <Form.Control\r\n                name=\"exposureTime\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter exposure time in ms\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.exposureTime}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Gain</Form.Label>\r\n              <Form.Control\r\n                name=\"gain\"\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                placeholder=\"Enter gain\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.gain}\r\n              />\r\n            </Form.Group>\r\n\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Label>Image Format</Form.Label>\r\n              <Form.Select name=\"imageFormat\" onChange={(e) => handleInputChange(e, cameraId)} value={formValues.imageFormat}>\r\n                <option value=\"compressed\">Compressed</option>\r\n                <option value=\"original\">Original</option>\r\n              </Form.Select>\r\n            </Form.Group>\r\n\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Request Locate\"\r\n                onChange={(e) => handleInputChange(e, cameraId)}\r\n                value={formValues.requestLocate}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-3\">\r\n      <div className=\"d-flex flex-row justify-content-between\">\r\n        {[1, 2].map(cameraId => renderCameraControls(cameraId))}\r\n      </div>\r\n      {/* <div className=\"mt-3\">\r\n        <Form.Range \r\n          min={500} \r\n          max={5000} \r\n          step={100} \r\n          value={maxWidth} \r\n        \r\n        />\r\n        <span className=\"ms-2\">Zoom:</span>\r\n      </div> */}\r\n\r\n      <div style={{\r\n        display: 'grid',\r\n        width: '100%',\r\n        height: '100%',\r\n        marginTop: '20px',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        position: 'relative',\r\n        placeItems: 'center'\r\n      }}>\r\n        <canvas\r\n          ref={canvasRefs[1]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 1,\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        />\r\n        <canvas\r\n          ref={canvasRefs[2]}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 0.5,\r\n            zIndex: 2,\r\n            backgroundColor: 'transparent',\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasTrackRef}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 3,\r\n            backgroundColor: 'transparent',\r\n\r\n\r\n          }}\r\n        />\r\n\r\n        <canvas\r\n          ref={canvasHologramRef}\r\n          style={{\r\n            gridArea: '1 / 1 / 2 / 2',\r\n            opacity: 1.0,\r\n            zIndex: 4,\r\n            backgroundColor: 'transparent'\r\n\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {[1, 2].map(cameraId => renderCameraModal(cameraId))}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CameraPreview;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}