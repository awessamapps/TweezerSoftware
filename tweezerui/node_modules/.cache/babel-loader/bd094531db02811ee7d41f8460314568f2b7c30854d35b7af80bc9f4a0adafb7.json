{"ast":null,"code":"var _jsxFileName = \"F:\\\\tweezerui\\\\src\\\\GlobalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, createContext, useRef, useState, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalContext = /*#__PURE__*/createContext({\n  canvas1: null,\n  canvas2: null\n});\nexport const useGlobalContext = () => {\n  _s();\n  return useContext(GlobalContext);\n};\n_s(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const CanvasProvider = ({\n  children\n}) => {\n  _s2();\n  const canvasRefs = {\n    1: useRef(null),\n    2: useRef(null),\n    3: useRef(null),\n    4: useRef(null)\n  };\n  const [imageProps, setImageProps] = useState({\n    \"width\": -1,\n    \"height\": -1\n  });\n  const [drawProps, setDrawProps] = useState({\n    \"scale\": 1,\n    \"startX\": 1,\n    \"startY\": 1,\n    \"endX\": 1,\n    \"endY\": 1,\n    \"centerX\": 1,\n    \"centerY\": 1\n  });\n  const localStorageIDs = {\n    \"cameras\": \"cameras\",\n    \"cameraserver\": \"cameraserver\",\n    \"trackoptions\": \"trackoptions\"\n  };\n  const [serverInfo, setServerInfo] = useState({\n    \"camserver\": {\n      1: {\n        \"ip\": \"10.0.63.153\",\n        \"port\": \"4001\",\n        \"username\": \"\",\n        \"password\": \"\"\n      },\n      2: {\n        \"ip\": \"10.0.63.153\",\n        \"port\": \"4002\",\n        \"username\": \"\",\n        \"password\": \"\"\n      }\n    },\n    \"trackserver\": {\n      1: {\n        \"ip\": \"10.0.63.153\",\n        \"port\": \"4011\",\n        \"username\": \"\",\n        \"password\": \"\"\n      }\n    }\n  });\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n  // Camera State\n\n  const [cameras, setCameras] = useState(() => {\n    var _storedCameras$, _storedCameras$$formV, _storedCameras$2, _storedCameras$2$form, _storedCameras$3, _storedCameras$3$form, _storedCameras$4, _storedCameras$4$form, _storedCameras$5, _storedCameras$5$form, _storedCameras$6, _storedCameras$6$form, _storedCameras$7, _storedCameras$7$form, _storedCameras$8, _storedCameras$8$form, _storedCameras$9, _storedCameras$9$form, _storedCameras$10, _storedCameras$10$for, _storedCameras$11, _storedCameras$11$for, _storedCameras$12, _storedCameras$12$for, _storedCameras$13, _storedCameras$13$for, _storedCameras$14, _storedCameras$14$for;\n    // Load initial camera state from localStorage\n    const storedCameras = JSON.parse(localStorage.getItem(localStorageIDs.camera)) || {};\n    return {\n      1: {\n        isPreviewActive: false,\n        isStreaming: false,\n        showModalSettings: false,\n        isSwitchActive: true,\n        formValues: {\n          camId: ((_storedCameras$ = storedCameras[1]) === null || _storedCameras$ === void 0 ? void 0 : (_storedCameras$$formV = _storedCameras$.formValues) === null || _storedCameras$$formV === void 0 ? void 0 : _storedCameras$$formV.camId) || 'Select Option',\n          folderPath: ((_storedCameras$2 = storedCameras[1]) === null || _storedCameras$2 === void 0 ? void 0 : (_storedCameras$2$form = _storedCameras$2.formValues) === null || _storedCameras$2$form === void 0 ? void 0 : _storedCameras$2$form.folderPath) || 'F:/',\n          targetFPS: ((_storedCameras$3 = storedCameras[1]) === null || _storedCameras$3 === void 0 ? void 0 : (_storedCameras$3$form = _storedCameras$3.formValues) === null || _storedCameras$3$form === void 0 ? void 0 : _storedCameras$3$form.targetFPS) || '10',\n          imageFormat: ((_storedCameras$4 = storedCameras[1]) === null || _storedCameras$4 === void 0 ? void 0 : (_storedCameras$4$form = _storedCameras$4.formValues) === null || _storedCameras$4$form === void 0 ? void 0 : _storedCameras$4$form.imageFormat) || '',\n          exposureTime: ((_storedCameras$5 = storedCameras[1]) === null || _storedCameras$5 === void 0 ? void 0 : (_storedCameras$5$form = _storedCameras$5.formValues) === null || _storedCameras$5$form === void 0 ? void 0 : _storedCameras$5$form.exposureTime) || \"10.0\",\n          gain: ((_storedCameras$6 = storedCameras[1]) === null || _storedCameras$6 === void 0 ? void 0 : (_storedCameras$6$form = _storedCameras$6.formValues) === null || _storedCameras$6$form === void 0 ? void 0 : _storedCameras$6$form.gain) || \"1.0\",\n          requestLocate: ((_storedCameras$7 = storedCameras[1]) === null || _storedCameras$7 === void 0 ? void 0 : (_storedCameras$7$form = _storedCameras$7.formValues) === null || _storedCameras$7$form === void 0 ? void 0 : _storedCameras$7$form.requestLocate) || false\n        },\n        comment: \"Select the camera ID from the dropdown list\",\n        isVirtual: false,\n        fps: 0,\n        rxSpeed: 0.0,\n        isFirstImageReceived: false,\n        canvasWidth: -1,\n        canvasHeight: -1\n      },\n      2: {\n        isPreviewActive: false,\n        isStreaming: false,\n        showModalSettings: false,\n        isSwitchActive: true,\n        formValues: {\n          camId: ((_storedCameras$8 = storedCameras[2]) === null || _storedCameras$8 === void 0 ? void 0 : (_storedCameras$8$form = _storedCameras$8.formValues) === null || _storedCameras$8$form === void 0 ? void 0 : _storedCameras$8$form.camId) || 'Select Option',\n          folderPath: ((_storedCameras$9 = storedCameras[2]) === null || _storedCameras$9 === void 0 ? void 0 : (_storedCameras$9$form = _storedCameras$9.formValues) === null || _storedCameras$9$form === void 0 ? void 0 : _storedCameras$9$form.folderPath) || 'F:/',\n          targetFPS: ((_storedCameras$10 = storedCameras[2]) === null || _storedCameras$10 === void 0 ? void 0 : (_storedCameras$10$for = _storedCameras$10.formValues) === null || _storedCameras$10$for === void 0 ? void 0 : _storedCameras$10$for.targetFPS) || '10',\n          imageFormat: ((_storedCameras$11 = storedCameras[2]) === null || _storedCameras$11 === void 0 ? void 0 : (_storedCameras$11$for = _storedCameras$11.formValues) === null || _storedCameras$11$for === void 0 ? void 0 : _storedCameras$11$for.imageFormat) || '',\n          exposureTime: ((_storedCameras$12 = storedCameras[2]) === null || _storedCameras$12 === void 0 ? void 0 : (_storedCameras$12$for = _storedCameras$12.formValues) === null || _storedCameras$12$for === void 0 ? void 0 : _storedCameras$12$for.exposureTime) || \"10.0\",\n          gain: ((_storedCameras$13 = storedCameras[2]) === null || _storedCameras$13 === void 0 ? void 0 : (_storedCameras$13$for = _storedCameras$13.formValues) === null || _storedCameras$13$for === void 0 ? void 0 : _storedCameras$13$for.gain) || \"1.0\",\n          requestLocate: ((_storedCameras$14 = storedCameras[2]) === null || _storedCameras$14 === void 0 ? void 0 : (_storedCameras$14$for = _storedCameras$14.formValues) === null || _storedCameras$14$for === void 0 ? void 0 : _storedCameras$14$for.requestLocate) || false\n        },\n        comment: \"Select the camera ID from the dropdown list\",\n        isVirtual: false,\n        fps: 0,\n        rxSpeed: 0.0,\n        isFirstImageReceived: false,\n        canvasWidth: -1,\n        canvasHeight: -1\n      }\n    };\n  });\n  // Save camera state to localStorage\n  useEffect(() => {\n    localStorage.setItem(localStorageIDs.camera, JSON.stringify(cameras));\n  }, [cameras]);\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n  // Track Options State\n\n  const [trackOptions, setTrackOptions] = useState(() => {\n    // Load initial camera state from localStorage\n    const storedTrackOptions = JSON.parse(localStorage.getItem(localStorageIDs.trackoptions)) || {};\n    return {\n      receiveStream: false,\n      isOnline: false,\n      isOpenTrackOption: storedTrackOptions.isOpenTrackOption || false,\n      diameter: storedTrackOptions.diameter || 21,\n      seperation: storedTrackOptions.seperation || 18,\n      percentile: storedTrackOptions.percentile || 1,\n      minmass: storedTrackOptions.minmass || 31000,\n      maxmass: storedTrackOptions.maxmass || 99999,\n      pixelThresh: storedTrackOptions.pixelThresh || 10,\n      preprocess: storedTrackOptions.preprocess || false,\n      lshort: storedTrackOptions.lshort || 0,\n      llong: storedTrackOptions.llong || 23,\n      minEcc: storedTrackOptions.minEcc || 0,\n      maxEcc: storedTrackOptions.maxEcc || 99,\n      refine: storedTrackOptions.refine || 1,\n      gridX: storedTrackOptions.gridX || 500,\n      gridY: storedTrackOptions.gridY || 500,\n      overlap: storedTrackOptions.overlap || 100\n    };\n  });\n  const [trackOptionsMinMaxVals, setTrackOptionsMinMaxVals] = useState({\n    diameter: {\n      min: 5,\n      max: 120\n    },\n    seperation: {\n      min: 5,\n      max: 120\n    },\n    percentile: {\n      min: 1,\n      max: 100\n    },\n    minmass: {\n      min: -1,\n      max: 100000\n    },\n    maxmass: {\n      min: -1,\n      max: 100000\n    },\n    pixelThresh: {\n      min: -1,\n      max: 100\n    },\n    lshort: {\n      min: 1,\n      max: 100\n    },\n    llong: {\n      min: 1,\n      max: 100\n    },\n    minEcc: {\n      min: -1,\n      max: 100\n    },\n    maxEcc: {\n      min: -1,\n      max: 100\n    },\n    refine: {\n      min: 1,\n      max: 100\n    },\n    gridX: {\n      min: 200,\n      max: 3000\n    },\n    gridY: {\n      min: 200,\n      max: 1000\n    },\n    overlap: {\n      min: 1,\n      max: 100\n    }\n  });\n\n  // Save camera state to localStorage\n  useEffect(() => {\n    localStorage.setItem(localStorageIDs.trackoptions, JSON.stringify(trackOptions));\n  }, [trackOptions]);\n\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      canvasRefs,\n      imageProps,\n      setImageProps,\n      drawProps,\n      setDrawProps,\n      localStorageIDs,\n      serverInfo,\n      setServerInfo,\n      cameras,\n      setCameras,\n      trackOptions,\n      setTrackOptions,\n      trackOptionsMinMaxVals\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n};\n_s2(CanvasProvider, \"+g8WUzQzXc/6+YNzIVc1fZnhX0U=\");\n_c = CanvasProvider;\nvar _c;\n$RefreshReg$(_c, \"CanvasProvider\");","map":{"version":3,"names":["React","useEffect","createContext","useRef","useState","useContext","jsxDEV","_jsxDEV","GlobalContext","canvas1","canvas2","useGlobalContext","_s","CanvasProvider","children","_s2","canvasRefs","imageProps","setImageProps","drawProps","setDrawProps","localStorageIDs","serverInfo","setServerInfo","cameras","setCameras","_storedCameras$","_storedCameras$$formV","_storedCameras$2","_storedCameras$2$form","_storedCameras$3","_storedCameras$3$form","_storedCameras$4","_storedCameras$4$form","_storedCameras$5","_storedCameras$5$form","_storedCameras$6","_storedCameras$6$form","_storedCameras$7","_storedCameras$7$form","_storedCameras$8","_storedCameras$8$form","_storedCameras$9","_storedCameras$9$form","_storedCameras$10","_storedCameras$10$for","_storedCameras$11","_storedCameras$11$for","_storedCameras$12","_storedCameras$12$for","_storedCameras$13","_storedCameras$13$for","_storedCameras$14","_storedCameras$14$for","storedCameras","JSON","parse","localStorage","getItem","camera","isPreviewActive","isStreaming","showModalSettings","isSwitchActive","formValues","camId","folderPath","targetFPS","imageFormat","exposureTime","gain","requestLocate","comment","isVirtual","fps","rxSpeed","isFirstImageReceived","canvasWidth","canvasHeight","setItem","stringify","trackOptions","setTrackOptions","storedTrackOptions","trackoptions","receiveStream","isOnline","isOpenTrackOption","diameter","seperation","percentile","minmass","maxmass","pixelThresh","preprocess","lshort","llong","minEcc","maxEcc","refine","gridX","gridY","overlap","trackOptionsMinMaxVals","setTrackOptionsMinMaxVals","min","max","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["F:/tweezerui/src/GlobalContext.js"],"sourcesContent":["import React, {useEffect, createContext, useRef, useState, useContext } from 'react';\r\n\r\n\r\nconst GlobalContext = createContext({ canvas1: null, canvas2: null });\r\n\r\nexport const useGlobalContext = () => {\r\n  return useContext(GlobalContext);\r\n};\r\n\r\nexport const CanvasProvider = ({ children }) => {\r\n\r\n  const canvasRefs = {\r\n    1: useRef(null),\r\n    2: useRef(null),\r\n    3 : useRef(null),\r\n    4 : useRef(null),\r\n  };\r\n\r\n  const [imageProps, setImageProps] = useState({\r\n    \"width\": -1,\r\n    \"height\": -1,\r\n  });\r\n\r\n  const [drawProps, setDrawProps] = useState({\r\n    \"scale\": 1,\r\n    \"startX\": 1,\r\n    \"startY\": 1,\r\n    \"endX\": 1,\r\n    \"endY\": 1,\r\n    \"centerX\": 1,\r\n    \"centerY\": 1\r\n  });\r\n\r\n  const localStorageIDs = {\r\n    \"cameras\": \"cameras\",\r\n    \"cameraserver\": \"cameraserver\",\r\n    \"trackoptions\": \"trackoptions\"\r\n  }\r\n\r\n  const [serverInfo, setServerInfo] = useState({\r\n    \"camserver\": {\r\n      1: { \"ip\": \"10.0.63.153\", \"port\": \"4001\", \"username\": \"\", \"password\": \"\" },\r\n      2: { \"ip\": \"10.0.63.153\", \"port\": \"4002\", \"username\": \"\", \"password\": \"\" }\r\n    },\r\n    \"trackserver\": {\r\n      1: { \"ip\": \"10.0.63.153\", \"port\": \"4011\", \"username\": \"\", \"password\": \"\" }\r\n    }\r\n  });\r\n\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  // Camera State\r\n\r\n  const [cameras, setCameras] = useState(() => {\r\n    // Load initial camera state from localStorage\r\n    const storedCameras = JSON.parse(localStorage.getItem(localStorageIDs.camera)) || {};\r\n    return {\r\n      1: {\r\n        isPreviewActive: false,\r\n        isStreaming: false,\r\n        showModalSettings: false,\r\n        isSwitchActive: true,\r\n        formValues: {\r\n          camId: storedCameras[1]?.formValues?.camId || 'Select Option',\r\n          folderPath: storedCameras[1]?.formValues?.folderPath || 'F:/',\r\n          targetFPS: storedCameras[1]?.formValues?.targetFPS || '10',\r\n          imageFormat: storedCameras[1]?.formValues?.imageFormat || '',\r\n          exposureTime: storedCameras[1]?.formValues?.exposureTime || \"10.0\",\r\n          gain: storedCameras[1]?.formValues?.gain || \"1.0\",\r\n          requestLocate: storedCameras[1]?.formValues?.requestLocate || false,\r\n        },\r\n        comment: \"Select the camera ID from the dropdown list\",\r\n        isVirtual: false,\r\n        fps: 0,\r\n        rxSpeed: 0.0,\r\n        isFirstImageReceived: false,\r\n        canvasWidth: -1,\r\n        canvasHeight: -1\r\n      },\r\n      2: {\r\n        isPreviewActive: false,\r\n        isStreaming: false,\r\n        showModalSettings: false,\r\n        isSwitchActive: true,\r\n        formValues: {\r\n          camId: storedCameras[2]?.formValues?.camId || 'Select Option',\r\n          folderPath: storedCameras[2]?.formValues?.folderPath || 'F:/',\r\n          targetFPS: storedCameras[2]?.formValues?.targetFPS || '10',\r\n          imageFormat: storedCameras[2]?.formValues?.imageFormat || '',\r\n          exposureTime: storedCameras[2]?.formValues?.exposureTime || \"10.0\",\r\n          gain: storedCameras[2]?.formValues?.gain || \"1.0\",\r\n          requestLocate: storedCameras[2]?.formValues?.requestLocate || false,\r\n        },\r\n        comment: \"Select the camera ID from the dropdown list\",\r\n        isVirtual: false,\r\n        fps: 0,\r\n        rxSpeed: 0.0,\r\n        isFirstImageReceived: false,\r\n        canvasWidth: -1,\r\n        canvasHeight: -1,\r\n      }\r\n    };\r\n  });\r\n  // Save camera state to localStorage\r\n  useEffect(() => {\r\n    localStorage.setItem(localStorageIDs.camera, JSON.stringify(cameras));\r\n  }, [cameras]);\r\n\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  // Track Options State\r\n\r\n  const [trackOptions, setTrackOptions] = useState(() => {\r\n    // Load initial camera state from localStorage\r\n    const storedTrackOptions = JSON.parse(localStorage.getItem(localStorageIDs.trackoptions)) || {};\r\n    \r\n\r\n\r\n    return {\r\n      receiveStream: false,\r\n      isOnline: false,\r\n      isOpenTrackOption:  storedTrackOptions.isOpenTrackOption || false,\r\n      diameter: storedTrackOptions.diameter || 21,\r\n      seperation: storedTrackOptions.seperation || 18,\r\n      percentile: storedTrackOptions.percentile || 1,\r\n      minmass: storedTrackOptions.minmass || 31000,\r\n      maxmass: storedTrackOptions.maxmass || 99999,\r\n      pixelThresh: storedTrackOptions.pixelThresh || 10,\r\n      preprocess: storedTrackOptions.preprocess || false,\r\n      lshort: storedTrackOptions.lshort || 0,\r\n      llong: storedTrackOptions.llong || 23,\r\n      minEcc: storedTrackOptions.minEcc || 0,\r\n      maxEcc: storedTrackOptions.maxEcc || 99,\r\n      refine: storedTrackOptions.refine || 1,\r\n      gridX: storedTrackOptions.gridX || 500,\r\n      gridY: storedTrackOptions.gridY || 500,\r\n      overlap: storedTrackOptions.overlap || 100,\r\n      \r\n    };\r\n  });\r\n\r\n  const [trackOptionsMinMaxVals, setTrackOptionsMinMaxVals] = useState({\r\n\r\n    diameter: { min: 5, max: 120 },\r\n    seperation: { min: 5, max: 120 },\r\n    percentile: { min: 1, max: 100 },\r\n    minmass: { min: -1, max: 100000 },\r\n    maxmass: { min: -1, max: 100000 },\r\n    pixelThresh: { min: -1, max: 100 },\r\n    lshort: { min: 1, max: 100 },\r\n    llong: { min: 1, max: 100 },\r\n    minEcc: { min: -1, max: 100 },\r\n    maxEcc: { min: -1, max: 100 },\r\n    refine: { min: 1, max: 100 },\r\n    gridX: { min: 200, max: 3000 },\r\n    gridY: { min: 200, max: 1000 },\r\n    overlap: { min: 1, max: 100 }\r\n  });\r\n\r\n\r\n\r\n  // Save camera state to localStorage\r\n  useEffect(() => {\r\n    \r\n    localStorage.setItem(localStorageIDs.trackoptions, JSON.stringify(trackOptions));\r\n}, [trackOptions]);\r\n\r\n  /////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{ canvasRefs, \r\n    imageProps, setImageProps, \r\n    drawProps, setDrawProps, \r\n    localStorageIDs, serverInfo, setServerInfo, \r\n    cameras, setCameras,\r\n    trackOptions, setTrackOptions   ,\r\n    trackOptionsMinMaxVals\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}